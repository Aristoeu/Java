package TwoSumProblem;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem55.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem40.TwoPointer(intArray85, (int) '#');
        int[] intArray93 = twoSumProblem39.TwoPointer(intArray85, (int) (byte) -1);
        int[] intArray95 = twoSumProblem0.HashMap(intArray85, (int) (short) 10);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.HashMap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem43.BruteForce(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem43.HashMap(intArray92, (int) (short) 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray92, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.BruteForce(intArray61, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem43.HashMap(intArray72, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem43.HashMap(intArray83, (int) '4');
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) 100);
        java.lang.Class<?> wildcardClass92 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        int[] intArray66 = twoSumProblem0.BruteForce(intArray62, (int) (short) 0);
        java.lang.Class<?> wildcardClass67 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray70, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem1.TwoPointer(intArray92, 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (short) -1);
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem18.BruteForce(intArray32, (int) (byte) 0);
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, 10);
        java.lang.Class<?> wildcardClass37 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.BruteForce(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem9.BruteForce(intArray67, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray67, (int) (short) -1);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem37.HashMap(intArray60, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem37.BruteForce(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem17.TwoPointer(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray72, (int) (short) 10);
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.TwoPointer(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        int[] intArray81 = twoSumProblem43.HashMap(intArray73, 10);
        int[] intArray83 = twoSumProblem0.BruteForce(intArray73, 1);
        java.lang.Class<?> wildcardClass84 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem45.HashMap(intArray58, (int) '#');
        int[] intArray66 = twoSumProblem9.HashMap(intArray58, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.TwoPointer(intArray79, (int) '#');
        int[] intArray85 = twoSumProblem9.HashMap(intArray79, (int) ' ');
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (byte) 10);
        java.lang.Class<?> wildcardClass88 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem52.HashMap(intArray85, (int) (short) 1);
        int[] intArray89 = twoSumProblem0.HashMap(intArray85, 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.HashMap(intArray90, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem68.HashMap(intArray77, 100);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem82.HashMap(intArray91, 100);
        int[] intArray95 = twoSumProblem0.HashMap(intArray93, (int) (short) 100);
        java.lang.Class<?> wildcardClass96 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 100);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.BruteForce(intArray91, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.BruteForce(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, (int) (short) 100);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray74 = twoSumProblem0.TwoPointer(intArray72, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem75.TwoPointer(intArray87, (int) '#');
        int[] intArray93 = twoSumProblem17.HashMap(intArray87, (int) ' ');
        int[] intArray95 = twoSumProblem0.HashMap(intArray87, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem0.HashMap(intArray40, (int) '4');
        java.lang.Class<?> wildcardClass47 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray81 = twoSumProblem67.TwoPointer(intArray79, 100);
        int[] intArray83 = twoSumProblem47.TwoPointer(intArray81, 10);
        int[] intArray85 = twoSumProblem0.BruteForce(intArray81, 100);
        java.lang.Class<?> wildcardClass86 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem47.HashMap(intArray76, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem47.HashMap(intArray87, (int) '4');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray87, (int) '4');
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem58.BruteForce(intArray72, (int) (byte) 0);
        int[] intArray76 = twoSumProblem0.HashMap(intArray72, (int) '4');
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem60.BruteForce(intArray74, (int) (byte) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, (int) '4');
        java.lang.Class<?> wildcardClass79 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray89, (-1));
        java.lang.Class<?> wildcardClass94 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem54.HashMap(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem37.HashMap(intArray89, (int) (short) 100);
        int[] intArray93 = twoSumProblem36.BruteForce(intArray89, (int) (short) 10);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) '#');
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        java.lang.Class<?> wildcardClass55 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        int[] intArray41 = twoSumProblem24.HashMap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem24.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem6.HashMap(intArray73, (int) (short) -1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray86, (-1));
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray63, 10);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray68 = twoSumProblem0.BruteForce(intArray66, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        int[] intArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray30 = twoSumProblem0.BruteForce(intArray28, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem25.TwoPointer(intArray61, (int) (short) -1);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem70.HashMap(intArray83, (int) '#');
        int[] intArray91 = twoSumProblem0.HashMap(intArray83, (int) (short) 1);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        int[] intArray76 = twoSumProblem32.TwoPointer(intArray74, (int) (short) 1);
        int[] intArray78 = twoSumProblem15.BruteForce(intArray76, (int) '4');
        int[] intArray80 = twoSumProblem0.TwoPointer(intArray76, (int) ' ');
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray83 = twoSumProblem0.BruteForce(intArray81, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem53.HashMap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem53.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem35.BruteForce(intArray83, (int) (short) 100);
        int[] intArray91 = twoSumProblem20.BruteForce(intArray83, 1);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, 10);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.BruteForce(intArray72, (int) (short) 1);
        int[] intArray76 = twoSumProblem0.BruteForce(intArray72, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.TwoPointer(intArray89, (int) '#');
        int[] intArray95 = twoSumProblem0.HashMap(intArray93, (-1));
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem24.HashMap(intArray33, 100);
        int[] intArray37 = twoSumProblem9.TwoPointer(intArray35, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem9.BruteForce(intArray41, 1);
        int[] intArray47 = twoSumProblem0.TwoPointer(intArray41, 1);
        java.lang.Class<?> wildcardClass48 = intArray47.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem48.BruteForce(intArray60, 0);
        int[] intArray66 = twoSumProblem42.BruteForce(intArray60, (int) (short) 0);
        int[] intArray68 = twoSumProblem33.HashMap(intArray66, (int) (short) 1);
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray68, 0);
        java.lang.Class<?> wildcardClass71 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.BruteForce(intArray58, (int) (short) 1);
        int[] intArray62 = twoSumProblem0.BruteForce(intArray58, (int) (short) 1);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray65 = twoSumProblem0.TwoPointer(intArray63, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.BruteForce(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray92, (int) (short) 10);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.TwoPointer(intArray97, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.HashMap(intArray77, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        int[] intArray66 = twoSumProblem0.BruteForce(intArray62, (int) (short) 0);
        int[] intArray72 = new int[] { 100, 0, 'a', '4', (short) 10 };
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray72, (int) '#');
        java.lang.Class<?> wildcardClass75 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 0, 97, 52, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, 100);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem15.HashMap(intArray53, 0);
        int[] intArray59 = twoSumProblem0.TwoPointer(intArray57, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem60.BruteForce(intArray74, (int) (byte) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray74, (int) '#');
        java.lang.Class<?> wildcardClass79 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem9.HashMap(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem9.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem58.HashMap(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem58.HashMap(intArray81, 0);
        int[] intArray87 = twoSumProblem9.TwoPointer(intArray81, (int) (short) 1);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray81, (int) (byte) 100);
        java.lang.Class<?> wildcardClass90 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem70.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem64.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem55.HashMap(intArray88, (int) (short) 1);
        int[] intArray92 = twoSumProblem0.HashMap(intArray90, 1);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem25.HashMap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem25.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray59, (int) ' ');
        java.lang.Class<?> wildcardClass62 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray76, 0);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) '#');
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem18.BruteForce(intArray77, (int) (byte) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem86.HashMap(intArray90, (int) (short) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, (int) 'a');
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.TwoPointer(intArray97, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.TwoPointer(intArray40, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem18.HashMap(intArray46, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem18.TwoPointer(intArray85, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray87, 0);
        java.lang.Class<?> wildcardClass90 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem1.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem1.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem81.HashMap(intArray90, 100);
        int[] intArray94 = twoSumProblem53.BruteForce(intArray90, (-1));
        int[] intArray96 = twoSumProblem1.TwoPointer(intArray90, 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray90, (int) (byte) 0);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem54.HashMap(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem54.HashMap(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem54.BruteForce(intArray85, (int) '#');
        int[] intArray91 = twoSumProblem0.HashMap(intArray85, (int) (byte) 100);
        java.lang.Class<?> wildcardClass92 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.TwoPointer(intArray66, (int) (byte) 1);
        int[] intArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray75 = twoSumProblem0.TwoPointer(intArray73, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem28.HashMap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem28.BruteForce(intArray58, 0);
        int[] intArray64 = twoSumProblem16.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = twoSumProblem15.BruteForce(intArray64, 1);
        int[] intArray73 = new int[] { 'a', (short) 10, (byte) 0, (byte) -1, (byte) 1, (byte) 0 };
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (byte) 10);
        int[] intArray77 = twoSumProblem0.HashMap(intArray73, (int) (short) 1);
        java.lang.Class<?> wildcardClass78 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 10, 0, -1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 2]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[2, 4]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem68.HashMap(intArray83, (int) (byte) 100);
        int[] intArray87 = twoSumProblem53.HashMap(intArray83, (int) (byte) -1);
        int[] intArray89 = twoSumProblem36.HashMap(intArray87, (int) '4');
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, 0);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem0.HashMap(intArray79, 10);
        java.lang.Class<?> wildcardClass84 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray78 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray80 = twoSumProblem66.TwoPointer(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray78, (int) (short) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (short) -1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem0.BruteForce(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.BruteForce(intArray62, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem69.HashMap(intArray82, (int) '#');
        int[] intArray90 = twoSumProblem44.BruteForce(intArray82, (int) '4');
        int[] intArray92 = twoSumProblem0.HashMap(intArray82, (int) (short) -1);
        java.lang.Class<?> wildcardClass93 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem0.HashMap(intArray40, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem62.HashMap(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem62.HashMap(intArray85, 0);
        int[] intArray91 = twoSumProblem47.TwoPointer(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) (short) -1);
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.TwoPointer(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem60.HashMap(intArray90, (int) (byte) -1);
        int[] intArray96 = twoSumProblem43.HashMap(intArray94, (int) '4');
        int[] intArray98 = twoSumProblem0.BruteForce(intArray94, (int) (short) 100);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray38 = twoSumProblem0.HashMap(intArray36, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray59 = twoSumProblem0.TwoPointer(intArray57, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.HashMap(intArray77, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray55, (int) '4');
        int[] intArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        int[] intArray60 = twoSumProblem36.BruteForce(intArray58, (-1));
        int[] intArray62 = twoSumProblem0.BruteForce(intArray58, 0);
        java.lang.Class<?> wildcardClass63 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.TwoPointer(intArray39, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem17.HashMap(intArray45, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem17.TwoPointer(intArray84, 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem68.HashMap(intArray77, 100);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem9.HashMap(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem9.TwoPointer(intArray33, (int) (short) 0);
        int[] intArray39 = twoSumProblem0.TwoPointer(intArray37, (-1));
        java.lang.Class<?> wildcardClass40 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem55.TwoPointer(intArray89, 10);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray89, (int) (short) 10);
        java.lang.Class<?> wildcardClass94 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray80, (int) '#');
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem74.HashMap(intArray83, 100);
        int[] intArray87 = twoSumProblem0.TwoPointer(intArray83, 1);
        java.lang.Class<?> wildcardClass88 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        int[] intArray60 = twoSumProblem0.TwoPointer(intArray58, 0);
        java.lang.Class<?> wildcardClass61 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray89, (int) '4');
        java.lang.Class<?> wildcardClass96 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem59.HashMap(intArray89, (int) (byte) -1);
        int[] intArray95 = twoSumProblem42.HashMap(intArray93, (int) '4');
        int[] intArray97 = twoSumProblem0.BruteForce(intArray93, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray49 = twoSumProblem30.HashMap(intArray43, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem30.HashMap(intArray53, 0);
        int[] intArray59 = twoSumProblem15.TwoPointer(intArray57, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem60.HashMap(intArray75, (int) (byte) 100);
        int[] intArray79 = twoSumProblem15.HashMap(intArray77, (int) (short) -1);
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray79, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray94 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray96 = twoSumProblem82.TwoPointer(intArray94, 100);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (short) 0);
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray87, (int) '#');
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray63 = twoSumProblem44.HashMap(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem44.HashMap(intArray67, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem44.BruteForce(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem44.HashMap(intArray85, (int) (short) 10);
        int[] intArray89 = twoSumProblem43.HashMap(intArray87, (int) (short) 0);
        int[] intArray91 = twoSumProblem0.BruteForce(intArray87, 10);
        java.lang.Class<?> wildcardClass92 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.TwoPointer(intArray67, (int) (short) 0);
        int[] intArray71 = twoSumProblem33.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (short) 100);
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem18.BruteForce(intArray50, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem70.HashMap(intArray79, 100);
        int[] intArray83 = twoSumProblem55.TwoPointer(intArray81, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem55.BruteForce(intArray87, 1);
        int[] intArray93 = twoSumProblem18.HashMap(intArray87, (int) 'a');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray87, (-1));
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem34.HashMap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem34.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem19.TwoPointer(intArray64, (int) '#');
        int[] intArray72 = twoSumProblem18.TwoPointer(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem73.HashMap(intArray88, (int) (byte) 100);
        int[] intArray92 = twoSumProblem18.TwoPointer(intArray88, (int) (byte) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray88, (int) (short) 10);
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem37.HashMap(intArray66, (int) (short) 10);
        int[] intArray74 = twoSumProblem0.HashMap(intArray72, (int) 'a');
        java.lang.Class<?> wildcardClass75 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        int[] intArray41 = twoSumProblem24.HashMap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem24.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem6.HashMap(intArray73, (int) (short) -1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray86, (-1));
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray37 = twoSumProblem18.HashMap(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem38.BruteForce(intArray68, 0);
        int[] intArray74 = twoSumProblem18.TwoPointer(intArray68, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.BruteForce(intArray68, (-1));
        java.lang.Class<?> wildcardClass77 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.HashMap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem58.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray92, (int) ' ');
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.BruteForce(intArray95, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem24.BruteForce(intArray42, (int) (short) 0);
        int[] intArray50 = twoSumProblem15.HashMap(intArray48, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem15.BruteForce(intArray67, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem15.TwoPointer(intArray73, 0);
        int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) '4');
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem68.HashMap(intArray77, 100);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem82.HashMap(intArray91, 100);
        int[] intArray95 = twoSumProblem0.HashMap(intArray93, (int) (short) 100);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.HashMap(intArray96, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem0.HashMap(intArray79, 10);
        java.lang.Class<?> wildcardClass84 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem17.TwoPointer(intArray82, (int) (byte) 0);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray82, 100);
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray70, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.BruteForce(intArray90, (int) (short) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (short) 0);
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.TwoPointer(intArray39, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem17.BruteForce(intArray61, (int) (short) 10);
        int[] intArray65 = twoSumProblem0.TwoPointer(intArray61, (int) (short) 0);
        java.lang.Class<?> wildcardClass66 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        java.lang.Class<?> wildcardClass25 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.BruteForce(intArray30, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        int[] intArray58 = twoSumProblem12.BruteForce(intArray50, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem12.HashMap(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem0.HashMap(intArray75, (int) (byte) 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray80 = twoSumProblem0.TwoPointer(intArray78, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem49.HashMap(intArray64, (int) (byte) 100);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray64, (int) (short) -1);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray71 = twoSumProblem0.TwoPointer(intArray69, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem48.TwoPointer(intArray60, (int) '#');
        int[] intArray66 = twoSumProblem42.BruteForce(intArray64, (-1));
        int[] intArray68 = twoSumProblem0.BruteForce(intArray64, 0);
        java.lang.Class<?> wildcardClass69 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem18.BruteForce(intArray50, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem70.HashMap(intArray79, 100);
        int[] intArray83 = twoSumProblem55.TwoPointer(intArray81, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem55.BruteForce(intArray87, 1);
        int[] intArray93 = twoSumProblem18.HashMap(intArray87, (int) 'a');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray87, (-1));
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.HashMap(intArray85, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem65.HashMap(intArray78, (int) '#');
        int[] intArray86 = twoSumProblem29.HashMap(intArray84, (-1));
        int[] intArray88 = twoSumProblem1.HashMap(intArray86, 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem10.TwoPointer(intArray46, (int) (short) -1);
        int[] intArray54 = twoSumProblem1.HashMap(intArray52, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem1.HashMap(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem1.TwoPointer(intArray84, (int) (byte) 1);
        int[] intArray94 = twoSumProblem0.HashMap(intArray92, (int) (byte) 100);
        java.lang.Class<?> wildcardClass95 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray52, (int) 'a');
        java.lang.Class<?> wildcardClass57 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.TwoPointer(intArray34, (int) (short) 0);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.HashMap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem39.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem0.TwoPointer(intArray73, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem76.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) -1);
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.BruteForce(intArray61, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem43.HashMap(intArray72, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem43.HashMap(intArray83, (int) '4');
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) 100);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (short) 100);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = twoSumProblem0.TwoPointer(intArray58, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem0.BruteForce(intArray58, 1);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray65 = twoSumProblem0.TwoPointer(intArray63, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem0.HashMap(intArray77, (int) (short) 10);
        java.lang.Class<?> wildcardClass84 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem55.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem40.TwoPointer(intArray85, (int) '#');
        int[] intArray93 = twoSumProblem39.TwoPointer(intArray85, (int) (byte) -1);
        int[] intArray95 = twoSumProblem0.HashMap(intArray85, (int) (short) 10);
        java.lang.Class<?> wildcardClass96 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray83, (int) '#');
        int[] intArray93 = new int[] { (short) 100, 'a', (short) 100 };
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) -1);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, 97, 100]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem48.HashMap(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem48.HashMap(intArray71, 0);
        int[] intArray77 = twoSumProblem33.TwoPointer(intArray75, (int) (short) 1);
        int[] intArray79 = twoSumProblem16.BruteForce(intArray77, (int) '4');
        int[] intArray81 = twoSumProblem1.TwoPointer(intArray77, (int) ' ');
        int[] intArray83 = twoSumProblem0.BruteForce(intArray77, (int) (short) 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray86 = twoSumProblem0.HashMap(intArray84, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem6.HashMap(intArray55, 1);
        int[] intArray65 = twoSumProblem0.HashMap(intArray55, 10);
        java.lang.Class<?> wildcardClass66 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem55.HashMap(intArray64, 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray66, 10);
        java.lang.Class<?> wildcardClass69 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem1.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem1.HashMap(intArray42, (int) (short) 10);
        int[] intArray46 = twoSumProblem0.HashMap(intArray44, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.HashMap(intArray51, (int) '#');
        java.lang.Class<?> wildcardClass58 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem0.TwoPointer(intArray58, 0);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray65 = twoSumProblem0.BruteForce(intArray63, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        int[] intArray66 = twoSumProblem12.HashMap(intArray64, (int) (short) 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray64, 10);
        int[] intArray74 = new int[] { (byte) 1, (byte) 10, '4', (byte) 100, (byte) 0 };
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, 10);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 10, 52, 100, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[4, 1]");
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (short) 100);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem37.BruteForce(intArray67, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem37.HashMap(intArray86, (int) (short) 100);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray86, (int) (short) 10);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray22 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray24 = twoSumProblem10.TwoPointer(intArray22, 100);
        int[] intArray26 = twoSumProblem9.BruteForce(intArray24, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem36.BruteForce(intArray54, (int) (short) 0);
        int[] intArray62 = twoSumProblem27.HashMap(intArray60, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem63.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem27.BruteForce(intArray79, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem27.TwoPointer(intArray85, 0);
        int[] intArray91 = twoSumProblem9.TwoPointer(intArray89, 10);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray89, (int) (byte) 1);
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        int[] intArray71 = twoSumProblem25.BruteForce(intArray63, (int) '4');
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.BruteForce(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem0.HashMap(intArray89, (int) ' ');
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem25.TwoPointer(intArray61, (int) (short) -1);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem70.HashMap(intArray83, (int) '#');
        int[] intArray91 = twoSumProblem0.HashMap(intArray83, (int) (short) 1);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray63 = twoSumProblem44.HashMap(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem44.HashMap(intArray67, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem44.BruteForce(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem44.HashMap(intArray85, (int) (short) 10);
        int[] intArray89 = twoSumProblem43.HashMap(intArray87, (int) (short) 0);
        int[] intArray91 = twoSumProblem0.BruteForce(intArray87, 10);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem38.HashMap(intArray71, (int) (short) 1);
        int[] intArray75 = twoSumProblem21.HashMap(intArray73, (int) (short) 100);
        int[] intArray77 = twoSumProblem1.TwoPointer(intArray73, 1);
        int[] intArray79 = twoSumProblem0.HashMap(intArray77, (int) (short) 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.BruteForce(intArray80, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) (byte) 0);
        int[] intArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray67 = twoSumProblem0.TwoPointer(intArray65, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '4');
        java.lang.Class<?> wildcardClass39 = intArray36.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray31 = twoSumProblem20.HashMap(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem20.TwoPointer(intArray44, (int) (short) 0);
        int[] intArray50 = twoSumProblem0.BruteForce(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem51.HashMap(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem51.HashMap(intArray74, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem79.HashMap(intArray88, 100);
        int[] intArray92 = twoSumProblem51.BruteForce(intArray88, (-1));
        int[] intArray94 = twoSumProblem0.HashMap(intArray88, (int) (byte) 10);
        java.lang.Class<?> wildcardClass95 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray83, (int) '#');
        java.lang.Class<?> wildcardClass90 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.BruteForce(intArray62, (int) (short) 0);
        int[] intArray70 = twoSumProblem35.HashMap(intArray68, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem35.BruteForce(intArray87, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem90 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray93 = new int[] { (short) -1, (short) 0 };
        int[] intArray95 = twoSumProblem90.BruteForce(intArray93, (int) '#');
        int[] intArray97 = twoSumProblem35.TwoPointer(intArray93, 0);
        int[] intArray99 = twoSumProblem0.HashMap(intArray97, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 1]");
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.HashMap(intArray52, (int) '4');
        java.lang.Class<?> wildcardClass59 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray49, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray76, 10);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem17.HashMap(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem17.TwoPointer(intArray41, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem46.HashMap(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem46.HashMap(intArray69, 0);
        int[] intArray75 = twoSumProblem17.BruteForce(intArray69, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem17.BruteForce(intArray80, 0);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray80, (int) (short) 100);
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem58.BruteForce(intArray72, (int) (byte) 0);
        int[] intArray76 = twoSumProblem0.HashMap(intArray72, (int) '4');
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem54.HashMap(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem37.HashMap(intArray89, (int) (short) 100);
        int[] intArray93 = twoSumProblem25.HashMap(intArray89, 10);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray89, 0);
        java.lang.Class<?> wildcardClass96 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.HashMap(intArray89, (int) ' ');
        java.lang.Class<?> wildcardClass96 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.HashMap(intArray65, (int) (byte) 100);
        java.lang.Class<?> wildcardClass68 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem24.BruteForce(intArray42, (int) (short) 0);
        int[] intArray50 = twoSumProblem9.BruteForce(intArray42, (int) (short) -1);
        int[] intArray52 = twoSumProblem0.BruteForce(intArray42, (int) (short) 10);
        int[] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray55 = twoSumProblem0.HashMap(intArray53, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem25.BruteForce(intArray53, (int) (byte) 10);
        int[] intArray57 = twoSumProblem0.HashMap(intArray53, (int) '4');
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        int[] intArray66 = twoSumProblem12.HashMap(intArray64, (int) (short) 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray64, 10);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray71 = twoSumProblem0.HashMap(intArray69, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray52, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem63.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem57.TwoPointer(intArray79, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem82.HashMap(intArray91, 100);
        int[] intArray95 = twoSumProblem57.BruteForce(intArray93, (int) '4');
        int[] intArray97 = twoSumProblem0.BruteForce(intArray95, (int) (short) 1);
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.BruteForce(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem9.BruteForce(intArray67, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray67, (int) (short) -1);
        java.lang.Class<?> wildcardClass74 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray83, (int) '#');
        int[] intArray93 = new int[] { (short) 100, 'a', (short) 100 };
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) -1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, 97, 100]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem25.TwoPointer(intArray49, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem54.HashMap(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem54.HashMap(intArray77, 0);
        int[] intArray83 = twoSumProblem25.BruteForce(intArray77, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem84.HashMap(intArray88, (int) (short) 100);
        int[] intArray94 = twoSumProblem25.BruteForce(intArray88, 0);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, 10);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.TwoPointer(intArray70, (int) '#');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.TwoPointer(intArray67, (int) (short) 0);
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, 10);
        java.lang.Class<?> wildcardClass72 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem67.HashMap(intArray82, (int) (byte) 100);
        int[] intArray86 = twoSumProblem52.HashMap(intArray82, (int) (byte) -1);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray82, 10);
        java.lang.Class<?> wildcardClass89 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem36.HashMap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem36.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray66, (int) (short) 100);
        int[] intArray74 = twoSumProblem1.HashMap(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem1.BruteForce(intArray79, 100);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (byte) 0);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem1.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem36.TwoPointer(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem1.TwoPointer(intArray87, (int) (short) 10);
        int[] intArray91 = twoSumProblem0.HashMap(intArray87, (int) (short) 1);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem62.BruteForce(intArray80, (int) (short) 0);
        int[] intArray88 = twoSumProblem53.HashMap(intArray86, (int) (short) 1);
        int[] intArray90 = twoSumProblem36.HashMap(intArray88, (int) (short) 100);
        int[] intArray92 = twoSumProblem35.TwoPointer(intArray90, (int) (byte) 10);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) -1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.BruteForce(intArray35, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem38.BruteForce(intArray68, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem38.TwoPointer(intArray76, (int) (short) -1);
        int[] intArray82 = twoSumProblem20.BruteForce(intArray80, 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 10);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.HashMap(intArray85, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.HashMap(intArray92, (int) (byte) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem41.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem35.BruteForce(intArray53, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        int[] intArray81 = twoSumProblem35.BruteForce(intArray73, (int) '4');
        int[] intArray83 = twoSumProblem0.HashMap(intArray81, (int) (byte) 1);
        int[] intArray90 = new int[] { (byte) 0, ' ', '4', (short) -1, 10, ' ' };
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 0);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 32, 52, -1, 10, 32]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem68.HashMap(intArray83, (int) (byte) 100);
        int[] intArray87 = twoSumProblem53.HashMap(intArray83, (int) (byte) -1);
        int[] intArray89 = twoSumProblem36.HashMap(intArray87, (int) '4');
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = twoSumProblem0.BruteForce(intArray92, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        java.lang.Class<?> wildcardClass55 = intArray52.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.BruteForce(intArray52, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem0.BruteForce(intArray63, 0);
        java.lang.Class<?> wildcardClass70 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem51.HashMap(intArray60, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.TwoPointer(intArray85, (int) (short) 0);
        int[] intArray89 = twoSumProblem51.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem36.HashMap(intArray89, 0);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray89, (int) (short) 1);
        java.lang.Class<?> wildcardClass94 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        int[] intArray44 = twoSumProblem20.BruteForce(intArray38, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem20.HashMap(intArray49, (int) (short) 10);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem73.HashMap(intArray82, 100);
        int[] intArray86 = twoSumProblem58.TwoPointer(intArray84, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem58.BruteForce(intArray90, 1);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) -1);
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        int[] intArray35 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray37 = twoSumProblem0.TwoPointer(intArray35, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem73.HashMap(intArray86, (int) '#');
        int[] intArray94 = twoSumProblem53.BruteForce(intArray92, 0);
        int[] intArray96 = twoSumProblem18.TwoPointer(intArray94, (int) (short) -1);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem70.HashMap(intArray85, (int) (byte) 100);
        int[] intArray89 = twoSumProblem0.HashMap(intArray85, (int) (short) 100);
        java.lang.Class<?> wildcardClass90 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        int[] intArray60 = twoSumProblem0.HashMap(intArray56, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem0.HashMap(intArray73, (int) ' ');
        java.lang.Class<?> wildcardClass78 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem0.TwoPointer(intArray63, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.TwoPointer(intArray90, (int) '#');
        int[] intArray96 = twoSumProblem72.BruteForce(intArray94, (-1));
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray94, (int) ' ');
        java.lang.Class<?> wildcardClass99 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) '#');
        java.lang.Class<?> wildcardClass61 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.TwoPointer(intArray34, (int) (short) 0);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.HashMap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem39.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem0.TwoPointer(intArray73, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem76.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) -1);
        java.lang.Class<?> wildcardClass95 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.TwoPointer(intArray40, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem18.HashMap(intArray46, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem18.TwoPointer(intArray85, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray87, 0);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem45.HashMap(intArray58, (int) '#');
        int[] intArray66 = twoSumProblem9.HashMap(intArray58, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.TwoPointer(intArray79, (int) '#');
        int[] intArray85 = twoSumProblem9.HashMap(intArray79, (int) ' ');
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (byte) 10);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem34.BruteForce(intArray46, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem66.BruteForce(intArray78, 0);
        int[] intArray84 = twoSumProblem60.BruteForce(intArray78, (int) (short) 0);
        int[] intArray86 = twoSumProblem51.HashMap(intArray84, (int) (short) 1);
        int[] intArray88 = twoSumProblem34.HashMap(intArray86, (int) (short) 100);
        int[] intArray90 = twoSumProblem33.TwoPointer(intArray88, (int) (byte) 10);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray88, 0);
        java.lang.Class<?> wildcardClass93 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem48.BruteForce(intArray60, 0);
        int[] intArray66 = twoSumProblem42.BruteForce(intArray60, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem42.HashMap(intArray71, (int) (short) 10);
        int[] intArray79 = twoSumProblem0.BruteForce(intArray71, 0);
        java.lang.Class<?> wildcardClass80 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem0.HashMap(intArray49, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.TwoPointer(intArray74, (int) '#');
        int[] intArray80 = twoSumProblem56.BruteForce(intArray78, (-1));
        int[] intArray82 = twoSumProblem0.HashMap(intArray78, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray95 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray97 = twoSumProblem83.TwoPointer(intArray95, 100);
        int[] intArray99 = twoSumProblem0.HashMap(intArray97, (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 1]");
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem17.HashMap(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem17.TwoPointer(intArray41, (int) (short) 0);
        int[] intArray47 = twoSumProblem0.HashMap(intArray41, (int) (short) -1);
        int[] intArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray50 = twoSumProblem0.HashMap(intArray48, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem75.TwoPointer(intArray87, (int) '#');
        int[] intArray93 = twoSumProblem17.HashMap(intArray87, (int) ' ');
        int[] intArray95 = twoSumProblem0.HashMap(intArray87, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        int[] intArray60 = twoSumProblem0.HashMap(intArray56, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem0.HashMap(intArray73, (int) ' ');
        java.lang.Class<?> wildcardClass78 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (-1), (short) 10, (byte) 0 };
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (byte) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.HashMap(intArray85, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, -1, 10, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem6.TwoPointer(intArray44, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem49.TwoPointer(intArray71, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem49.HashMap(intArray77, (int) (short) 10);
        int[] intArray83 = twoSumProblem6.TwoPointer(intArray77, (int) (short) 100);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem1.TwoPointer(intArray83, (int) (byte) 0);
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, (int) (byte) 100);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.HashMap(intArray88, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        java.lang.Class<?> wildcardClass71 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem45.HashMap(intArray60, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray75 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray77 = twoSumProblem63.TwoPointer(intArray75, 100);
        int[] intArray79 = twoSumProblem45.BruteForce(intArray75, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem45.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem17.HashMap(intArray83, 100);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) -1);
        java.lang.Class<?> wildcardClass92 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem38.HashMap(intArray71, (int) (short) 1);
        int[] intArray75 = twoSumProblem29.HashMap(intArray71, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem29.HashMap(intArray81, (int) (short) 0);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) (short) 0);
        java.lang.Class<?> wildcardClass86 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray29 = twoSumProblem18.HashMap(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem47.HashMap(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem30.HashMap(intArray82, (int) (short) 100);
        int[] intArray86 = twoSumProblem18.HashMap(intArray82, 10);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (byte) -1);
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem0.HashMap(intArray41, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem61.HashMap(intArray74, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem61.HashMap(intArray84, 0);
        int[] intArray90 = twoSumProblem44.BruteForce(intArray88, (int) (byte) 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray88, 100);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        int[] intArray44 = twoSumProblem20.BruteForce(intArray38, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem20.HashMap(intArray49, (int) (short) 10);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, 100);
        java.lang.Class<?> wildcardClass58 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (short) 100);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.HashMap(intArray73, 0);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        int[] intArray69 = twoSumProblem35.HashMap(intArray65, (int) (byte) -1);
        int[] intArray71 = twoSumProblem0.HashMap(intArray65, (int) (short) 10);
        java.lang.Class<?> wildcardClass72 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray6 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray8 = twoSumProblem0.BruteForce(intArray6, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem34.HashMap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem34.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem19.TwoPointer(intArray64, (int) '#');
        int[] intArray72 = twoSumProblem18.TwoPointer(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem73.HashMap(intArray88, (int) (byte) 100);
        int[] intArray92 = twoSumProblem18.TwoPointer(intArray88, (int) (byte) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray88, (int) (short) 10);
        java.lang.Class<?> wildcardClass95 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem1.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem1.HashMap(intArray42, (int) (short) 10);
        int[] intArray46 = twoSumProblem0.HashMap(intArray44, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.HashMap(intArray51, (int) '#');
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray43 = twoSumProblem32.HashMap(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.TwoPointer(intArray66, (int) (short) 0);
        int[] intArray70 = twoSumProblem32.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem17.HashMap(intArray70, 0);
        int[] intArray74 = twoSumProblem0.HashMap(intArray72, (int) (short) 0);
        java.lang.Class<?> wildcardClass75 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem63.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem57.BruteForce(intArray75, (int) (short) 0);
        int[] intArray83 = twoSumProblem42.BruteForce(intArray75, (int) (short) -1);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) 'a');
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.BruteForce(intArray86, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem34.BruteForce(intArray46, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem66.BruteForce(intArray78, 0);
        int[] intArray84 = twoSumProblem60.BruteForce(intArray78, (int) (short) 0);
        int[] intArray86 = twoSumProblem51.HashMap(intArray84, (int) (short) 1);
        int[] intArray88 = twoSumProblem34.HashMap(intArray86, (int) (short) 100);
        int[] intArray90 = twoSumProblem33.TwoPointer(intArray88, (int) (byte) 10);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray88, 0);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray19 = twoSumProblem11.HashMap(intArray15, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        int[] intArray44 = twoSumProblem20.BruteForce(intArray38, (int) (short) 0);
        int[] intArray46 = twoSumProblem11.HashMap(intArray44, (int) (short) 1);
        int[] intArray48 = twoSumProblem2.HashMap(intArray44, 100);
        int[] intArray50 = twoSumProblem1.BruteForce(intArray44, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem51.HashMap(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem51.BruteForce(intArray79, (int) (byte) 10);
        int[] intArray83 = twoSumProblem1.HashMap(intArray81, 1);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, 1);
        java.lang.Class<?> wildcardClass86 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem29.BruteForce(intArray47, (int) (short) 0);
        int[] intArray55 = twoSumProblem20.HashMap(intArray53, (int) (short) 1);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.TwoPointer(intArray76, (int) '#');
        int[] intArray82 = twoSumProblem58.BruteForce(intArray80, (-1));
        int[] intArray84 = twoSumProblem0.HashMap(intArray80, (int) (byte) -1);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem35.BruteForce(intArray74, 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, (int) (short) -1);
        java.lang.Class<?> wildcardClass79 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem54.HashMap(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem37.HashMap(intArray89, (int) (short) 100);
        int[] intArray93 = twoSumProblem36.BruteForce(intArray89, (int) (short) 10);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) '#');
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray80, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) 1);
        java.lang.Class<?> wildcardClass95 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem0.HashMap(intArray85, (int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem75.TwoPointer(intArray87, (int) '#');
        int[] intArray93 = twoSumProblem17.HashMap(intArray87, (int) ' ');
        int[] intArray95 = twoSumProblem0.HashMap(intArray87, (int) (short) -1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        int[] intArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray64 = twoSumProblem0.TwoPointer(intArray62, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray83, (int) '#');
        int[] intArray93 = new int[] { (short) 100, 'a', (short) 100 };
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) -1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, 97, 100]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.HashMap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem58.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray92, (int) ' ');
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem19.HashMap(intArray34, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem19.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem1.BruteForce(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.BruteForce(intArray68, 0);
        int[] intArray74 = twoSumProblem1.HashMap(intArray68, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem1.HashMap(intArray87, (int) (short) 0);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray87, (int) ' ');
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.BruteForce(intArray94, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        int[] intArray35 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray37 = twoSumProblem0.TwoPointer(intArray35, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem32.HashMap(intArray45, (int) '#');
        int[] intArray53 = twoSumProblem15.HashMap(intArray45, 10);
        int[] intArray55 = twoSumProblem0.BruteForce(intArray53, (int) (short) -1);
        java.lang.Class<?> wildcardClass56 = intArray55.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem48.BruteForce(intArray60, 0);
        int[] intArray66 = twoSumProblem42.BruteForce(intArray60, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem42.HashMap(intArray71, (int) (short) 10);
        int[] intArray79 = twoSumProblem0.BruteForce(intArray71, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem81.HashMap(intArray85, (int) (short) 100);
        int[] intArray93 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray95 = twoSumProblem81.TwoPointer(intArray93, 100);
        int[] intArray97 = twoSumProblem80.HashMap(intArray95, (int) (byte) 100);
        int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 1]");
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem42.HashMap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem42.BruteForce(intArray72, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem42.TwoPointer(intArray80, (int) (short) -1);
        int[] intArray86 = twoSumProblem0.HashMap(intArray84, (int) '4');
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray89 = twoSumProblem0.TwoPointer(intArray87, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem75.HashMap(intArray84, 100);
        int[] intArray88 = twoSumProblem60.TwoPointer(intArray86, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem89 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        int[] intArray94 = twoSumProblem89.BruteForce(intArray92, (int) '#');
        int[] intArray96 = twoSumProblem60.TwoPointer(intArray92, (int) (byte) 0);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray92, 0);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem38.HashMap(intArray71, (int) (short) 1);
        int[] intArray75 = twoSumProblem29.HashMap(intArray71, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem29.HashMap(intArray81, (int) (short) 0);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) (short) 0);
        java.lang.Class<?> wildcardClass86 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem25.TwoPointer(intArray49, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem54.HashMap(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem54.HashMap(intArray77, 0);
        int[] intArray83 = twoSumProblem25.BruteForce(intArray77, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem84.HashMap(intArray88, (int) (short) 100);
        int[] intArray94 = twoSumProblem25.BruteForce(intArray88, 0);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, 10);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem75.HashMap(intArray84, 100);
        int[] intArray88 = twoSumProblem60.TwoPointer(intArray86, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem89 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        int[] intArray94 = twoSumProblem89.BruteForce(intArray92, (int) '#');
        int[] intArray96 = twoSumProblem60.TwoPointer(intArray92, (int) (byte) 0);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray92, 0);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem74.HashMap(intArray83, 100);
        int[] intArray87 = twoSumProblem0.TwoPointer(intArray83, 1);
        java.lang.Class<?> wildcardClass88 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem55.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem40.TwoPointer(intArray85, (int) '#');
        int[] intArray93 = twoSumProblem39.TwoPointer(intArray85, (int) (byte) -1);
        int[] intArray95 = twoSumProblem0.HashMap(intArray85, (int) (short) 10);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.BruteForce(intArray35, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem38.BruteForce(intArray68, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem38.TwoPointer(intArray76, (int) (short) -1);
        int[] intArray82 = twoSumProblem20.BruteForce(intArray80, 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 10);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        int[] intArray38 = twoSumProblem0.HashMap(intArray30, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        int[] intArray73 = twoSumProblem39.HashMap(intArray69, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem39.HashMap(intArray90, 0);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray92, (int) (short) -1);
        java.lang.Class<?> wildcardClass95 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        int[] intArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray54 = twoSumProblem0.TwoPointer(intArray52, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        int[] intArray64 = twoSumProblem18.BruteForce(intArray62, (int) (byte) 0);
        int[] intArray66 = twoSumProblem0.HashMap(intArray62, (int) (short) -1);
        java.lang.Class<?> wildcardClass67 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray75 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray77 = twoSumProblem63.TwoPointer(intArray75, 100);
        int[] intArray79 = twoSumProblem62.HashMap(intArray77, (int) (byte) 100);
        int[] intArray81 = twoSumProblem47.HashMap(intArray77, (int) (byte) -1);
        int[] intArray83 = twoSumProblem0.BruteForce(intArray77, (int) (byte) 100);
        java.lang.Class<?> wildcardClass84 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem50.HashMap(intArray59, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem62.TwoPointer(intArray84, (int) (short) 0);
        int[] intArray88 = twoSumProblem50.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem0.HashMap(intArray88, 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray27 = twoSumProblem0.BruteForce(intArray25, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem0.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray87, (int) 'a');
        java.lang.Class<?> wildcardClass90 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem9.BruteForce(intArray21, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem44.HashMap(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem44.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem26.BruteForce(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem9.HashMap(intArray80, 100);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (byte) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem24.HashMap(intArray33, 100);
        int[] intArray37 = twoSumProblem9.TwoPointer(intArray35, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem9.BruteForce(intArray41, 1);
        int[] intArray47 = twoSumProblem0.TwoPointer(intArray41, 1);
        java.lang.Class<?> wildcardClass48 = intArray41.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        int[] intArray38 = twoSumProblem19.HashMap(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem19.HashMap(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem19.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.TwoPointer(intArray67, (int) '#');
        int[] intArray73 = twoSumProblem19.HashMap(intArray67, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem19.BruteForce(intArray82, 10);
        int[] intArray86 = twoSumProblem18.BruteForce(intArray84, (int) (byte) 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) ' ');
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem43.HashMap(intArray66, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem43.BruteForce(intArray74, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem43.HashMap(intArray84, (int) (short) 10);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) '4');
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem0.TwoPointer(intArray63, (int) '4');
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray74 = twoSumProblem0.HashMap(intArray72, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.HashMap(intArray92, (int) (byte) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) (short) -1);
        java.lang.Class<?> wildcardClass97 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.TwoPointer(intArray40, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem18.HashMap(intArray46, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem18.TwoPointer(intArray85, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray87, 0);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.TwoPointer(intArray74, (int) '#');
        int[] intArray80 = twoSumProblem0.TwoPointer(intArray74, (int) (short) 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray83 = twoSumProblem0.HashMap(intArray81, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem32.HashMap(intArray70, 0);
        int[] intArray76 = twoSumProblem17.TwoPointer(intArray74, 1);
        int[] intArray78 = twoSumProblem0.BruteForce(intArray76, 1);
        java.lang.Class<?> wildcardClass79 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray49, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray76, 10);
        java.lang.Class<?> wildcardClass85 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray78 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray80 = twoSumProblem66.TwoPointer(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray78, (int) (short) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (short) -1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.BruteForce(intArray85, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem52.HashMap(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem52.HashMap(intArray75, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem52.BruteForce(intArray83, (int) '#');
        int[] intArray89 = twoSumProblem0.HashMap(intArray87, (-1));
        java.lang.Class<?> wildcardClass90 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray82, (int) (short) 10);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.HashMap(intArray61, (int) (short) -1);
        int[] intArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray70 = twoSumProblem0.BruteForce(intArray68, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.HashMap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem29.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) -1);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray63 = twoSumProblem52.HashMap(intArray61, 100);
        int[] intArray65 = twoSumProblem37.TwoPointer(intArray63, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.TwoPointer(intArray65, 0);
        java.lang.Class<?> wildcardClass68 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem7.TwoPointer(intArray52, (int) '#');
        int[] intArray60 = twoSumProblem6.TwoPointer(intArray52, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem61.HashMap(intArray74, (int) '#');
        int[] intArray82 = twoSumProblem6.BruteForce(intArray80, (int) '4');
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 100);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray18 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray20 = twoSumProblem6.TwoPointer(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray32 = twoSumProblem21.HashMap(intArray30, 100);
        int[] intArray34 = twoSumProblem6.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem6.TwoPointer(intArray38, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem58.HashMap(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem58.HashMap(intArray81, 0);
        int[] intArray87 = twoSumProblem43.TwoPointer(intArray85, (int) (short) 1);
        int[] intArray89 = twoSumProblem6.HashMap(intArray85, 10);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, 1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = twoSumProblem0.BruteForce(intArray92, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        int[] intArray60 = twoSumProblem0.HashMap(intArray56, 0);
        java.lang.Class<?> wildcardClass61 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.TwoPointer(intArray67, (int) (short) 0);
        int[] intArray71 = twoSumProblem33.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (short) 100);
        java.lang.Class<?> wildcardClass74 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.TwoPointer(intArray70, (int) '#');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) (byte) 1);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray89, (-1));
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem68.HashMap(intArray77, 100);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, 0);
        java.lang.Class<?> wildcardClass82 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray78 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray80 = twoSumProblem66.TwoPointer(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray78, (int) (short) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (short) -1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem47.BruteForce(intArray78, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem47.HashMap(intArray88, (int) (short) 10);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 100);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        int[] intArray38 = twoSumProblem0.HashMap(intArray30, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray50 = twoSumProblem39.HashMap(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem39.TwoPointer(intArray63, (int) (short) 0);
        int[] intArray69 = twoSumProblem0.BruteForce(intArray67, 100);
        java.lang.Class<?> wildcardClass70 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem37.HashMap(intArray60, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem37.BruteForce(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem17.TwoPointer(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray72, (int) (short) 10);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        java.lang.Class<?> wildcardClass78 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem42.BruteForce(intArray57, (int) (short) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray57, 0);
        int[] intArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 1]");
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem17.HashMap(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem17.TwoPointer(intArray41, (int) (short) 0);
        int[] intArray47 = twoSumProblem0.HashMap(intArray41, (int) (short) -1);
        java.lang.Class<?> wildcardClass48 = intArray47.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 10);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem42.HashMap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem42.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem30.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = twoSumProblem29.BruteForce(intArray78, 1);
        int[] intArray87 = new int[] { 'a', (short) 10, (byte) 0, (byte) -1, (byte) 1, (byte) 0 };
        int[] intArray89 = twoSumProblem29.BruteForce(intArray87, (int) (byte) 10);
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, 0);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 10, 0, -1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[1, 2]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem45.HashMap(intArray60, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray75 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray77 = twoSumProblem63.TwoPointer(intArray75, 100);
        int[] intArray79 = twoSumProblem45.BruteForce(intArray75, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem45.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem17.HashMap(intArray83, 100);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) -1);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem20.BruteForce(intArray34, (int) (byte) 0);
        int[] intArray38 = twoSumProblem0.TwoPointer(intArray36, (int) (byte) 10);
        java.lang.Class<?> wildcardClass39 = intArray38.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem18.BruteForce(intArray32, (int) (byte) 0);
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.TwoPointer(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem54.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem37.BruteForce(intArray84, (int) '#');
        int[] intArray92 = twoSumProblem0.HashMap(intArray84, 10);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem36.TwoPointer(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem61.HashMap(intArray76, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem61.BruteForce(intArray91, 0);
        int[] intArray97 = twoSumProblem36.TwoPointer(intArray95, (int) ' ');
        int[] intArray99 = twoSumProblem0.BruteForce(intArray95, (int) '#');
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem0.TwoPointer(intArray63, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.TwoPointer(intArray90, (int) '#');
        int[] intArray96 = twoSumProblem72.BruteForce(intArray94, (-1));
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray94, (int) ' ');
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem19.HashMap(intArray34, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem19.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem1.BruteForce(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.BruteForce(intArray68, 0);
        int[] intArray74 = twoSumProblem1.HashMap(intArray68, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem1.HashMap(intArray87, (int) (short) 0);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray87, (int) ' ');
        java.lang.Class<?> wildcardClass94 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) (byte) 0);
        int[] intArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray67 = twoSumProblem0.BruteForce(intArray65, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem40.HashMap(intArray49, 100);
        int[] intArray53 = twoSumProblem25.TwoPointer(intArray51, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem25.BruteForce(intArray57, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem62.BruteForce(intArray80, (int) (short) 0);
        int[] intArray88 = twoSumProblem25.TwoPointer(intArray86, 0);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray86, 0);
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem28.HashMap(intArray70, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem28.BruteForce(intArray90, (int) (short) 0);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray94, (int) '#');
        java.lang.Class<?> wildcardClass97 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.BruteForce(intArray61, (int) (short) 0);
        int[] intArray69 = twoSumProblem34.HashMap(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem25.HashMap(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem25.HashMap(intArray77, (int) (short) 0);
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray79, (int) '4');
        java.lang.Class<?> wildcardClass82 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem56.HashMap(intArray65, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem68.TwoPointer(intArray90, (int) (short) 0);
        int[] intArray94 = twoSumProblem56.BruteForce(intArray92, (int) '#');
        int[] intArray96 = twoSumProblem55.HashMap(intArray92, (int) (byte) 1);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, 1);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray83, (int) '#');
        int[] intArray93 = new int[] { (short) 100, 'a', (short) 100 };
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) -1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, 97, 100]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem0.BruteForce(intArray77, 10);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray86 = twoSumProblem0.HashMap(intArray84, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem30.BruteForce(intArray77, (int) (short) 0);
        int[] intArray85 = twoSumProblem29.BruteForce(intArray83, (int) (short) 1);
        int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, (int) (short) 10);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.HashMap(intArray88, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem34.HashMap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem34.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem19.TwoPointer(intArray64, (int) '#');
        int[] intArray72 = twoSumProblem18.TwoPointer(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem18.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, 100);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        int[] intArray29 = twoSumProblem1.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem45.HashMap(intArray54, 100);
        int[] intArray58 = twoSumProblem30.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray60 = twoSumProblem1.HashMap(intArray56, 100);
        int[] intArray62 = twoSumProblem0.TwoPointer(intArray56, (int) (short) 100);
        java.lang.Class<?> wildcardClass63 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem75.TwoPointer(intArray87, (int) '#');
        int[] intArray93 = twoSumProblem17.HashMap(intArray87, (int) ' ');
        int[] intArray95 = twoSumProblem0.HashMap(intArray87, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.HashMap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem29.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) -1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem0.HashMap(intArray61, (int) '#');
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray66 = twoSumProblem0.TwoPointer(intArray64, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem17.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.TwoPointer(intArray65, (int) '#');
        int[] intArray71 = twoSumProblem17.HashMap(intArray65, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem17.BruteForce(intArray80, 10);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray80, (int) '#');
        java.lang.Class<?> wildcardClass85 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem66.HashMap(intArray79, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem66.HashMap(intArray89, 0);
        int[] intArray95 = twoSumProblem49.BruteForce(intArray93, (int) (byte) 0);
        int[] intArray97 = twoSumProblem31.BruteForce(intArray95, (int) (byte) -1);
        int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem9.HashMap(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem27.BruteForce(intArray39, 0);
        int[] intArray45 = twoSumProblem21.TwoPointer(intArray43, (int) (short) 0);
        int[] intArray47 = twoSumProblem9.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem0.TwoPointer(intArray45, (int) (byte) 0);
        java.lang.Class<?> wildcardClass50 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray63 = twoSumProblem52.HashMap(intArray61, 100);
        int[] intArray65 = twoSumProblem37.TwoPointer(intArray63, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.TwoPointer(intArray65, 0);
        int[] intArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray70 = twoSumProblem0.HashMap(intArray68, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.TwoPointer(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem30.BruteForce(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem15.TwoPointer(intArray77, 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (short) 1);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray49, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray87 = twoSumProblem52.HashMap(intArray81, (int) (short) 10);
        int[] intArray89 = twoSumProblem0.HashMap(intArray81, (int) (byte) 100);
        java.lang.Class<?> wildcardClass90 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem24.BruteForce(intArray42, (int) (short) 0);
        int[] intArray50 = twoSumProblem9.BruteForce(intArray42, (int) (short) -1);
        int[] intArray52 = twoSumProblem0.BruteForce(intArray42, (int) (short) 10);
        int[] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray55 = twoSumProblem0.BruteForce(intArray53, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem39.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem33.BruteForce(intArray51, (int) (short) 0);
        int[] intArray59 = twoSumProblem24.HashMap(intArray57, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem24.BruteForce(intArray76, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem24.TwoPointer(intArray82, 0);
        int[] intArray88 = twoSumProblem9.BruteForce(intArray86, (int) '4');
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) ' ');
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem37.HashMap(intArray66, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem37.HashMap(intArray77, (int) '4');
        int[] intArray85 = twoSumProblem17.HashMap(intArray83, (-1));
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, 0);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem17.HashMap(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.HashMap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem29.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem17.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray59, (int) (short) 10);
        java.lang.Class<?> wildcardClass68 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray52 = twoSumProblem33.HashMap(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem53.HashMap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem53.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem33.TwoPointer(intArray83, (int) (short) 100);
        int[] intArray91 = twoSumProblem0.BruteForce(intArray83, (int) (short) 100);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem29.BruteForce(intArray47, (int) (short) 0);
        int[] intArray55 = twoSumProblem20.HashMap(intArray53, (int) (short) 1);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray76, (int) '4');
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem68.TwoPointer(intArray90, (int) (short) 0);
        int[] intArray94 = twoSumProblem0.HashMap(intArray90, (int) (byte) 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.BruteForce(intArray95, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (short) 100);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        int[] intArray76 = twoSumProblem32.TwoPointer(intArray74, (int) (short) 1);
        int[] intArray78 = twoSumProblem15.BruteForce(intArray76, (int) '4');
        int[] intArray80 = twoSumProblem0.TwoPointer(intArray76, (int) ' ');
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray83 = twoSumProblem0.BruteForce(intArray81, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem70.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem64.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem55.HashMap(intArray88, (int) (short) 1);
        int[] intArray92 = twoSumProblem0.HashMap(intArray90, 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem19.HashMap(intArray34, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem19.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem1.BruteForce(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.BruteForce(intArray68, 0);
        int[] intArray74 = twoSumProblem1.HashMap(intArray68, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem1.HashMap(intArray87, (int) (short) 0);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray87, (int) ' ');
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem41.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem35.BruteForce(intArray53, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        int[] intArray81 = twoSumProblem35.BruteForce(intArray73, (int) '4');
        int[] intArray83 = twoSumProblem0.HashMap(intArray81, (int) (byte) 1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray86 = twoSumProblem0.BruteForce(intArray84, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem36.BruteForce(intArray54, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem36.HashMap(intArray65, (int) (short) 10);
        int[] intArray73 = twoSumProblem0.HashMap(intArray65, (-1));
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 100);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.HashMap(intArray77, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem74.HashMap(intArray83, 100);
        int[] intArray87 = twoSumProblem0.TwoPointer(intArray83, 1);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        int[] intArray29 = twoSumProblem1.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem1.TwoPointer(intArray33, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem38.TwoPointer(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem1.HashMap(intArray80, 10);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 0);
        int[] intArray93 = new int[] { (short) 10, (byte) -1, '4', (byte) 1, 'a', 0 };
        int[] intArray95 = twoSumProblem0.HashMap(intArray93, 100);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[10, -1, 52, 1, 97, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.TwoPointer(intArray34, (int) (short) 0);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem55.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem40.TwoPointer(intArray85, (int) '#');
        int[] intArray93 = twoSumProblem39.TwoPointer(intArray85, (int) (byte) -1);
        int[] intArray95 = twoSumProblem0.HashMap(intArray85, (int) (short) 10);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        java.lang.Class<?> wildcardClass29 = intArray24.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        int[] intArray60 = twoSumProblem0.HashMap(intArray56, 0);
        java.lang.Class<?> wildcardClass61 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray63 = twoSumProblem52.HashMap(intArray61, 100);
        int[] intArray65 = twoSumProblem37.TwoPointer(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem37.BruteForce(intArray69, 1);
        int[] intArray75 = twoSumProblem0.HashMap(intArray69, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem0.HashMap(intArray88, (-1));
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem50.BruteForce(intArray78, (int) (byte) 10);
        int[] intArray82 = twoSumProblem0.HashMap(intArray80, 1);
        java.lang.Class<?> wildcardClass83 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.TwoPointer(intArray39, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem17.BruteForce(intArray61, (int) (short) 10);
        int[] intArray65 = twoSumProblem0.TwoPointer(intArray61, (int) (short) 0);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray68 = twoSumProblem0.HashMap(intArray66, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem0.HashMap(intArray54, (int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem25.HashMap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem25.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray59, (int) ' ');
        int[] intArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray64 = twoSumProblem0.BruteForce(intArray62, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem0.BruteForce(intArray41, (int) (byte) 100);
        java.lang.Class<?> wildcardClass44 = intArray43.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray76, 0);
        int[] intArray82 = twoSumProblem0.BruteForce(intArray80, 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem34.BruteForce(intArray46, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem66.BruteForce(intArray78, 0);
        int[] intArray84 = twoSumProblem60.BruteForce(intArray78, (int) (short) 0);
        int[] intArray86 = twoSumProblem51.HashMap(intArray84, (int) (short) 1);
        int[] intArray88 = twoSumProblem34.HashMap(intArray86, (int) (short) 100);
        int[] intArray90 = twoSumProblem33.TwoPointer(intArray88, (int) (byte) 10);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray88, 0);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem52.HashMap(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem52.HashMap(intArray75, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem81.HashMap(intArray85, (int) (short) 100);
        int[] intArray91 = twoSumProblem80.HashMap(intArray89, 100);
        int[] intArray93 = twoSumProblem52.BruteForce(intArray89, (-1));
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray89, 100);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem60.HashMap(intArray69, 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray77, (int) (byte) 0);
        java.lang.Class<?> wildcardClass82 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem37.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem31.TwoPointer(intArray67, (int) (short) -1);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, 0);
        java.lang.Class<?> wildcardClass76 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem42.HashMap(intArray65, 0);
        int[] intArray71 = twoSumProblem25.BruteForce(intArray69, (int) (byte) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray69, (int) ' ');
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.TwoPointer(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem30.BruteForce(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem15.TwoPointer(intArray77, 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (short) 1);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.HashMap(intArray88, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem1.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem1.HashMap(intArray42, (int) (short) 10);
        int[] intArray46 = twoSumProblem0.HashMap(intArray44, (int) (short) 0);
        java.lang.Class<?> wildcardClass47 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem17.TwoPointer(intArray82, (int) (byte) 0);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray82, 100);
        java.lang.Class<?> wildcardClass91 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem60.HashMap(intArray69, 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) 'a');
        java.lang.Class<?> wildcardClass74 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem0.HashMap(intArray40, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem47.BruteForce(intArray59, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem64.HashMap(intArray87, 0);
        int[] intArray93 = twoSumProblem47.BruteForce(intArray91, (int) (byte) 0);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) '4');
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem37.HashMap(intArray66, (int) (short) 10);
        int[] intArray74 = twoSumProblem0.HashMap(intArray72, (int) 'a');
        java.lang.Class<?> wildcardClass75 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem17.HashMap(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem17.TwoPointer(intArray41, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem46.TwoPointer(intArray72, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem46.TwoPointer(intArray78, (int) (byte) 0);
        int[] intArray84 = twoSumProblem17.HashMap(intArray78, (int) (short) -1);
        int[] intArray86 = twoSumProblem0.HashMap(intArray78, 10);
        java.lang.Class<?> wildcardClass87 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray29 = twoSumProblem18.HashMap(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem47.HashMap(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem30.HashMap(intArray82, (int) (short) 100);
        int[] intArray86 = twoSumProblem18.HashMap(intArray82, 10);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (byte) -1);
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem18.BruteForce(intArray32, (int) (byte) 0);
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.TwoPointer(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem54.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem37.BruteForce(intArray84, (int) '#');
        int[] intArray92 = twoSumProblem0.HashMap(intArray84, 10);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem51.BruteForce(intArray84, (int) (short) -1);
        int[] intArray94 = twoSumProblem42.BruteForce(intArray84, (int) (short) 10);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray84, (int) (byte) 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray31 = twoSumProblem20.HashMap(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem20.TwoPointer(intArray44, (int) (short) 0);
        int[] intArray50 = twoSumProblem0.BruteForce(intArray44, 100);
        int[] intArray51 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem49.HashMap(intArray64, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray81 = twoSumProblem67.TwoPointer(intArray79, 100);
        int[] intArray83 = twoSumProblem49.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem34.TwoPointer(intArray79, (int) '#');
        int[] intArray87 = twoSumProblem33.TwoPointer(intArray79, (int) (byte) -1);
        int[] intArray89 = twoSumProblem0.HashMap(intArray79, 10);
        java.lang.Class<?> wildcardClass90 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem39.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem33.BruteForce(intArray51, (int) (short) 0);
        int[] intArray59 = twoSumProblem24.HashMap(intArray57, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem24.BruteForce(intArray76, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem24.TwoPointer(intArray82, 0);
        int[] intArray88 = twoSumProblem9.BruteForce(intArray86, (int) '4');
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) ' ');
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem0.HashMap(intArray49, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem57.HashMap(intArray66, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem75.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem69.TwoPointer(intArray91, (int) (short) 0);
        int[] intArray95 = twoSumProblem57.BruteForce(intArray93, (int) '#');
        int[] intArray97 = twoSumProblem56.HashMap(intArray93, (int) (byte) 1);
        int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.BruteForce(intArray52, 100);
        int[] intArray59 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray61 = twoSumProblem0.TwoPointer(intArray59, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem25.TwoPointer(intArray61, (int) (short) -1);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem70.HashMap(intArray83, (int) '#');
        int[] intArray91 = twoSumProblem0.HashMap(intArray83, (int) (short) 1);
        java.lang.Class<?> wildcardClass92 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem48.TwoPointer(intArray60, (int) '#');
        int[] intArray66 = twoSumProblem42.BruteForce(intArray64, (-1));
        int[] intArray68 = twoSumProblem0.BruteForce(intArray64, 0);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray71 = twoSumProblem0.BruteForce(intArray69, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 1]");
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem51.HashMap(intArray60, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray75 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray77 = twoSumProblem63.TwoPointer(intArray75, 100);
        int[] intArray79 = twoSumProblem51.TwoPointer(intArray75, (int) (short) 0);
        int[] intArray81 = twoSumProblem42.TwoPointer(intArray79, (-1));
        int[] intArray83 = twoSumProblem0.HashMap(intArray81, (int) (short) 10);
        java.lang.Class<?> wildcardClass84 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem62.HashMap(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem62.HashMap(intArray85, 0);
        int[] intArray91 = twoSumProblem0.HashMap(intArray85, 1);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem37.HashMap(intArray66, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem37.HashMap(intArray77, (int) '4');
        int[] intArray85 = twoSumProblem17.HashMap(intArray83, (-1));
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, 0);
        java.lang.Class<?> wildcardClass88 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        int[] intArray44 = twoSumProblem20.BruteForce(intArray38, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem20.HashMap(intArray49, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem20.HashMap(intArray60, (int) '4');
        int[] intArray68 = twoSumProblem0.BruteForce(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem75.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem69.BruteForce(intArray87, (int) (short) 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, 0);
        java.lang.Class<?> wildcardClass96 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, 100);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.BruteForce(intArray85, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        int[] intArray63 = twoSumProblem28.HashMap(intArray61, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem28.HashMap(intArray83, (-1));
        int[] intArray87 = twoSumProblem0.HashMap(intArray85, 10);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem1.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem1.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem81.HashMap(intArray90, 100);
        int[] intArray94 = twoSumProblem53.BruteForce(intArray90, (-1));
        int[] intArray96 = twoSumProblem1.TwoPointer(intArray90, 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray90, (int) (byte) 0);
        java.lang.Class<?> wildcardClass99 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray44 = twoSumProblem0.HashMap(intArray42, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        int[] intArray60 = twoSumProblem36.BruteForce(intArray58, (-1));
        int[] intArray62 = twoSumProblem0.BruteForce(intArray58, 0);
        java.lang.Class<?> wildcardClass63 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem25.TwoPointer(intArray61, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem25.BruteForce(intArray80, (int) '4');
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray80, 1);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem0.HashMap(intArray77, (int) (short) 10);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray86 = twoSumProblem0.HashMap(intArray84, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        int[] intArray38 = twoSumProblem0.HashMap(intArray30, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        int[] intArray73 = twoSumProblem39.HashMap(intArray69, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem39.HashMap(intArray90, 0);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray92, (int) (short) -1);
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray78 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray80 = twoSumProblem66.TwoPointer(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray78, (int) (short) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (short) -1);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem62.BruteForce(intArray80, (int) (short) 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, 0);
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, 0);
        int[] intArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray56 = twoSumProblem0.HashMap(intArray54, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem9.HashMap(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem9.TwoPointer(intArray33, (int) (short) 0);
        int[] intArray39 = twoSumProblem0.TwoPointer(intArray37, (-1));
        java.lang.Class<?> wildcardClass40 = intArray39.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        int[] intArray38 = twoSumProblem0.HashMap(intArray30, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem45.BruteForce(intArray57, 0);
        int[] intArray63 = twoSumProblem39.TwoPointer(intArray61, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem70.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem64.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem39.TwoPointer(intArray88, (int) '4');
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (short) 1);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 0);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem34.BruteForce(intArray46, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem66.BruteForce(intArray78, 0);
        int[] intArray84 = twoSumProblem60.BruteForce(intArray78, (int) (short) 0);
        int[] intArray86 = twoSumProblem51.HashMap(intArray84, (int) (short) 1);
        int[] intArray88 = twoSumProblem34.HashMap(intArray86, (int) (short) 100);
        int[] intArray90 = twoSumProblem33.TwoPointer(intArray88, (int) (byte) 10);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray88, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.TwoPointer(intArray30, (int) '#');
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem54.HashMap(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem54.HashMap(intArray77, 0);
        int[] intArray83 = twoSumProblem37.BruteForce(intArray81, (int) (byte) 0);
        int[] intArray85 = twoSumProblem0.BruteForce(intArray83, 0);
        java.lang.Class<?> wildcardClass86 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem55.HashMap(intArray64, 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray66, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem69.HashMap(intArray84, (int) (byte) 100);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (byte) -1);
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        int[] intArray58 = new int[] { 'a', (short) 10, (byte) 0, (byte) -1, (byte) 1, (byte) 0 };
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, (-1));
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray80 = twoSumProblem0.TwoPointer(intArray78, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 10, 0, -1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1, 2]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem15.BruteForce(intArray62, (int) '#');
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray62, 10);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray73 = twoSumProblem0.HashMap(intArray71, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.BruteForce(intArray35, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem38.BruteForce(intArray68, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem38.TwoPointer(intArray76, (int) (short) -1);
        int[] intArray82 = twoSumProblem20.BruteForce(intArray80, 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 10);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem47.HashMap(intArray76, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem47.HashMap(intArray87, (int) '4');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray87, (int) '4');
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray40 = twoSumProblem29.HashMap(intArray38, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem41.HashMap(intArray56, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem41.BruteForce(intArray71, 0);
        int[] intArray77 = twoSumProblem29.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = twoSumProblem28.BruteForce(intArray77, 1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray77, 1);
        java.lang.Class<?> wildcardClass82 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem17.HashMap(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem17.TwoPointer(intArray41, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem46.HashMap(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem46.HashMap(intArray69, 0);
        int[] intArray75 = twoSumProblem17.BruteForce(intArray69, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem17.BruteForce(intArray80, 0);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray80, (int) (short) 100);
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray49, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.TwoPointer(intArray70, (int) '#');
        int[] intArray76 = twoSumProblem0.HashMap(intArray70, (int) ' ');
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem55.HashMap(intArray64, 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray66, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem69.HashMap(intArray84, (int) (byte) 100);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (byte) -1);
        java.lang.Class<?> wildcardClass89 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray81 = twoSumProblem67.TwoPointer(intArray79, 100);
        int[] intArray83 = twoSumProblem47.TwoPointer(intArray81, 10);
        int[] intArray85 = twoSumProblem0.BruteForce(intArray81, 100);
        java.lang.Class<?> wildcardClass86 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.BruteForce(intArray72, (int) (short) 1);
        int[] intArray76 = twoSumProblem0.BruteForce(intArray72, (int) (short) -1);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.HashMap(intArray77, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, (int) (short) 10);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.BruteForce(intArray52, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem0.BruteForce(intArray63, 0);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray72 = twoSumProblem0.HashMap(intArray70, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem39.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem33.BruteForce(intArray51, (int) (short) 0);
        int[] intArray59 = twoSumProblem24.HashMap(intArray57, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem24.BruteForce(intArray76, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem24.TwoPointer(intArray82, 0);
        int[] intArray88 = twoSumProblem18.BruteForce(intArray82, (int) (short) 1);
        int[] intArray90 = twoSumProblem0.HashMap(intArray82, 10);
        java.lang.Class<?> wildcardClass91 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray18 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray20 = twoSumProblem6.TwoPointer(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray32 = twoSumProblem21.HashMap(intArray30, 100);
        int[] intArray34 = twoSumProblem6.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem6.TwoPointer(intArray38, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem58.HashMap(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem58.HashMap(intArray81, 0);
        int[] intArray87 = twoSumProblem43.TwoPointer(intArray85, (int) (short) 1);
        int[] intArray89 = twoSumProblem6.HashMap(intArray85, 10);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, 1);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem36.HashMap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem36.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray66, (int) (short) 100);
        int[] intArray74 = twoSumProblem1.HashMap(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem1.BruteForce(intArray79, 100);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (byte) 0);
        java.lang.Class<?> wildcardClass88 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem67.HashMap(intArray82, (int) (byte) 100);
        int[] intArray86 = twoSumProblem52.HashMap(intArray82, (int) (byte) -1);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray82, 10);
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) (short) -1);
        java.lang.Class<?> wildcardClass74 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.HashMap(intArray92, (int) (byte) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) (short) -1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.TwoPointer(intArray97, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem73.HashMap(intArray82, 100);
        int[] intArray86 = twoSumProblem0.BruteForce(intArray84, (int) (byte) 10);
        java.lang.Class<?> wildcardClass87 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray89, (int) '4');
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem60.HashMap(intArray69, 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) 'a');
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem0.HashMap(intArray61, 100);
        java.lang.Class<?> wildcardClass64 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray52 = twoSumProblem0.TwoPointer(intArray50, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem59.TwoPointer(intArray71, (int) '#');
        int[] intArray77 = twoSumProblem53.BruteForce(intArray75, (-1));
        int[] intArray79 = twoSumProblem0.HashMap(intArray75, (int) (byte) 100);
        java.lang.Class<?> wildcardClass80 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        int[] intArray38 = twoSumProblem19.HashMap(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem19.HashMap(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem19.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.TwoPointer(intArray67, (int) '#');
        int[] intArray73 = twoSumProblem19.HashMap(intArray67, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem19.BruteForce(intArray82, 10);
        int[] intArray86 = twoSumProblem18.BruteForce(intArray84, (int) (byte) 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) ' ');
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        int[] intArray35 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray37 = twoSumProblem0.HashMap(intArray35, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem68.HashMap(intArray77, 100);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem82.HashMap(intArray91, 100);
        int[] intArray95 = twoSumProblem0.HashMap(intArray93, (int) (short) 100);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray45 = twoSumProblem34.HashMap(intArray43, 100);
        int[] intArray47 = twoSumProblem19.TwoPointer(intArray45, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem63.HashMap(intArray72, 100);
        int[] intArray76 = twoSumProblem48.TwoPointer(intArray74, (int) (byte) 0);
        int[] intArray78 = twoSumProblem19.HashMap(intArray74, 100);
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem0.HashMap(intArray80, (int) '#');
        java.lang.Class<?> wildcardClass83 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        int[] intArray11 = twoSumProblem6.BruteForce(intArray9, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        int[] intArray30 = twoSumProblem6.TwoPointer(intArray28, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem6.HashMap(intArray34, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray50 = twoSumProblem39.HashMap(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem57.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem51.TwoPointer(intArray73, (int) (short) 0);
        int[] intArray77 = twoSumProblem39.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem6.BruteForce(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem0.BruteForce(intArray75, 0);
        java.lang.Class<?> wildcardClass82 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        java.lang.Class<?> wildcardClass74 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        int[] intArray38 = twoSumProblem19.HashMap(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem19.HashMap(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem19.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.TwoPointer(intArray67, (int) '#');
        int[] intArray73 = twoSumProblem19.HashMap(intArray67, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem19.BruteForce(intArray82, 10);
        int[] intArray86 = twoSumProblem18.BruteForce(intArray84, (int) (byte) 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) ' ');
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        int[] intArray38 = twoSumProblem0.HashMap(intArray30, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem45.BruteForce(intArray57, 0);
        int[] intArray63 = twoSumProblem39.TwoPointer(intArray61, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem70.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem64.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem39.TwoPointer(intArray88, (int) '4');
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (short) 1);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem0.HashMap(intArray77, (int) (short) 10);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray86 = twoSumProblem0.HashMap(intArray84, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem36.HashMap(intArray66, 10);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.HashMap(intArray77, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray83, (int) '#');
        java.lang.Class<?> wildcardClass90 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        java.lang.Class<?> wildcardClass45 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem0.HashMap(intArray85, (int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem9.HashMap(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem27.BruteForce(intArray39, 0);
        int[] intArray45 = twoSumProblem21.TwoPointer(intArray43, (int) (short) 0);
        int[] intArray47 = twoSumProblem9.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem0.TwoPointer(intArray45, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem50.TwoPointer(intArray84, 10);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem32.HashMap(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem32.HashMap(intArray55, 0);
        int[] intArray61 = twoSumProblem17.TwoPointer(intArray59, (int) (short) 1);
        int[] intArray63 = twoSumProblem0.BruteForce(intArray61, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem0.HashMap(intArray77, (int) (byte) -1);
        java.lang.Class<?> wildcardClass86 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.BruteForce(intArray30, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        int[] intArray58 = twoSumProblem12.BruteForce(intArray50, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem12.HashMap(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem0.HashMap(intArray75, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray82, 0);
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem47.BruteForce(intArray78, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem47.HashMap(intArray88, (int) (short) 10);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 100);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.BruteForce(intArray93, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.BruteForce(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem9.BruteForce(intArray67, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray67, (int) (short) -1);
        java.lang.Class<?> wildcardClass74 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem28.HashMap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem28.BruteForce(intArray58, 0);
        int[] intArray64 = twoSumProblem16.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = twoSumProblem15.BruteForce(intArray64, 1);
        int[] intArray73 = new int[] { 'a', (short) 10, (byte) 0, (byte) -1, (byte) 1, (byte) 0 };
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (byte) 10);
        int[] intArray77 = twoSumProblem0.HashMap(intArray73, (int) (short) 1);
        java.lang.Class<?> wildcardClass78 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 10, 0, -1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 2]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[2, 4]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem32.HashMap(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem32.HashMap(intArray55, 0);
        int[] intArray61 = twoSumProblem17.TwoPointer(intArray59, (int) (short) 1);
        int[] intArray63 = twoSumProblem0.BruteForce(intArray61, (int) '4');
        java.lang.Class<?> wildcardClass64 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray53 = twoSumProblem18.HashMap(intArray47, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem18.HashMap(intArray58, (int) '4');
        int[] intArray66 = twoSumProblem0.TwoPointer(intArray58, (int) (short) 100);
        java.lang.Class<?> wildcardClass67 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem9.HashMap(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem27.BruteForce(intArray39, 0);
        int[] intArray45 = twoSumProblem21.TwoPointer(intArray43, (int) (short) 0);
        int[] intArray47 = twoSumProblem9.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem0.TwoPointer(intArray45, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem50.TwoPointer(intArray84, 10);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem37.HashMap(intArray60, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem37.BruteForce(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem17.TwoPointer(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray72, 100);
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray38 = twoSumProblem0.BruteForce(intArray36, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.BruteForce(intArray62, (int) (short) 0);
        int[] intArray70 = twoSumProblem35.HashMap(intArray68, (int) (short) 1);
        int[] intArray72 = twoSumProblem18.HashMap(intArray70, (int) (short) 100);
        int[] intArray74 = twoSumProblem17.TwoPointer(intArray72, (int) (byte) 10);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (short) 0);
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem45.HashMap(intArray60, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray75 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray77 = twoSumProblem63.TwoPointer(intArray75, 100);
        int[] intArray79 = twoSumProblem45.BruteForce(intArray75, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem45.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem17.HashMap(intArray83, 100);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) -1);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem7.BruteForce(intArray19, 0);
        int[] intArray25 = twoSumProblem1.TwoPointer(intArray23, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem1.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem34.HashMap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem34.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem1.TwoPointer(intArray68, 0);
        int[] intArray72 = twoSumProblem0.BruteForce(intArray68, (int) (short) -1);
        java.lang.Class<?> wildcardClass73 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem45.HashMap(intArray58, (int) '#');
        int[] intArray66 = twoSumProblem25.BruteForce(intArray64, 0);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray66, (int) (short) 100);
        java.lang.Class<?> wildcardClass69 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.BruteForce(intArray52, 0);
        java.lang.Class<?> wildcardClass59 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.TwoPointer(intArray74, (int) '#');
        int[] intArray80 = twoSumProblem0.TwoPointer(intArray74, (int) (short) 0);
        java.lang.Class<?> wildcardClass81 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem0.BruteForce(intArray41, (int) (byte) 100);
        int[] intArray44 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray46 = twoSumProblem0.TwoPointer(intArray44, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem35.TwoPointer(intArray80, (int) '#');
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 10);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem58.HashMap(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem58.HashMap(intArray81, 0);
        int[] intArray87 = twoSumProblem0.HashMap(intArray81, 1);
        java.lang.Class<?> wildcardClass88 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        int[] intArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray39 = twoSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem18.TwoPointer(intArray56, (int) (short) -1);
        int[] intArray62 = twoSumProblem0.BruteForce(intArray60, 0);
        int[] intArray68 = new int[] { 10, (short) -1, (byte) 0, (short) -1, ' ' };
        int[] intArray70 = twoSumProblem0.HashMap(intArray68, (-1));
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[10, -1, 0, -1, 32]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1, 2]");
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        int[] intArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray19 = twoSumProblem0.HashMap(intArray17, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem17.BruteForce(intArray29, 0);
        int[] intArray35 = twoSumProblem11.BruteForce(intArray29, (int) (short) 0);
        int[] intArray37 = twoSumProblem2.HashMap(intArray35, (int) (short) 1);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray35, (int) (short) -1);
        int[] intArray41 = twoSumProblem0.TwoPointer(intArray39, (int) (short) 100);
        java.lang.Class<?> wildcardClass42 = intArray41.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        int[] intArray38 = twoSumProblem0.HashMap(intArray30, 10);
        java.lang.Class<?> wildcardClass39 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray43 = twoSumProblem32.HashMap(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.TwoPointer(intArray66, (int) (short) 0);
        int[] intArray70 = twoSumProblem32.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem17.HashMap(intArray70, 0);
        int[] intArray74 = twoSumProblem0.HashMap(intArray72, (int) (short) 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray77 = twoSumProblem0.TwoPointer(intArray75, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.HashMap(intArray61, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, 0);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.BruteForce(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem9.BruteForce(intArray67, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray67, (int) (short) -1);
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.HashMap(intArray73, 0);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem0.HashMap(intArray88, (int) (short) -1);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem68.TwoPointer(intArray90, (int) (short) 0);
        int[] intArray94 = twoSumProblem0.HashMap(intArray90, (int) (byte) 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        int[] intArray46 = new int[] { (short) 1, (byte) 1, (byte) 0 };
        int[] intArray48 = twoSumProblem0.TwoPointer(intArray46, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem49.BruteForce(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.TwoPointer(intArray79, (int) '#');
        int[] intArray85 = twoSumProblem49.HashMap(intArray83, (int) (byte) 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (short) 0);
        java.lang.Class<?> wildcardClass88 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem7.BruteForce(intArray19, 0);
        int[] intArray25 = twoSumProblem1.TwoPointer(intArray23, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem1.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.BruteForce(intArray61, (int) (short) 0);
        int[] intArray69 = twoSumProblem34.HashMap(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem1.TwoPointer(intArray69, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray71, (int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.HashMap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem43.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem26.BruteForce(intArray73, (int) (short) 0);
        int[] intArray81 = twoSumProblem25.BruteForce(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem0.TwoPointer(intArray79, (int) (byte) -1);
        java.lang.Class<?> wildcardClass84 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.HashMap(intArray52, (int) '4');
        java.lang.Class<?> wildcardClass59 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        int[] intArray44 = twoSumProblem20.BruteForce(intArray38, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem20.HashMap(intArray49, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem20.HashMap(intArray60, (int) '4');
        int[] intArray68 = twoSumProblem0.BruteForce(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem75.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem69.BruteForce(intArray87, (int) (short) 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, 0);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem52.HashMap(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem52.HashMap(intArray75, 0);
        int[] intArray81 = twoSumProblem37.TwoPointer(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem0.HashMap(intArray79, 10);
        java.lang.Class<?> wildcardClass84 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.HashMap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem39.BruteForce(intArray87, (int) (short) 100);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) '#');
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem72.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem18.HashMap(intArray86, (int) (byte) 100);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 1);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        java.lang.Class<?> wildcardClass31 = intArray30.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.HashMap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem43.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem26.BruteForce(intArray73, (int) (short) 0);
        int[] intArray81 = twoSumProblem25.BruteForce(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem0.TwoPointer(intArray79, (int) (byte) -1);
        java.lang.Class<?> wildcardClass84 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem32.HashMap(intArray45, (int) '#');
        int[] intArray53 = twoSumProblem15.HashMap(intArray45, 10);
        int[] intArray55 = twoSumProblem0.BruteForce(intArray53, (int) (short) -1);
        java.lang.Class<?> wildcardClass56 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem17.HashMap(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.HashMap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem29.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem17.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray59, (int) (short) 10);
        java.lang.Class<?> wildcardClass68 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem20.BruteForce(intArray34, (int) (byte) 0);
        int[] intArray38 = twoSumProblem0.TwoPointer(intArray36, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem39.TwoPointer(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem56.HashMap(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem56.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem39.BruteForce(intArray86, (int) '#');
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) 100);
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem0.HashMap(intArray72, (int) ' ');
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray77 = twoSumProblem0.TwoPointer(intArray75, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem19.HashMap(intArray34, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem19.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem1.BruteForce(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.BruteForce(intArray68, 0);
        int[] intArray74 = twoSumProblem1.HashMap(intArray68, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem1.HashMap(intArray87, (int) (short) 0);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray87, (int) ' ');
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.BruteForce(intArray94, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem70.HashMap(intArray85, (int) (byte) 100);
        int[] intArray89 = twoSumProblem0.HashMap(intArray85, (int) (short) 100);
        java.lang.Class<?> wildcardClass90 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem1.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem1.HashMap(intArray50, (int) (short) 100);
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray52, (-1));
        java.lang.Class<?> wildcardClass55 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        java.lang.Class<?> wildcardClass74 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray52 = twoSumProblem33.HashMap(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem68.BruteForce(intArray86, (int) (short) 0);
        int[] intArray94 = twoSumProblem53.BruteForce(intArray86, (int) (short) -1);
        int[] intArray96 = twoSumProblem33.HashMap(intArray94, (int) (short) 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) 'a');
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem51.BruteForce(intArray84, (int) (short) -1);
        int[] intArray94 = twoSumProblem42.BruteForce(intArray84, (int) (short) 10);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray84, (int) (byte) 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.BruteForce(intArray97, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.HashMap(intArray92, (int) (byte) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) (short) -1);
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem0.TwoPointer(intArray61, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray78 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray80 = twoSumProblem66.TwoPointer(intArray78, 100);
        int[] intArray82 = twoSumProblem0.BruteForce(intArray80, (int) '#');
        java.lang.Class<?> wildcardClass83 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem22.BruteForce(intArray34, 0);
        int[] intArray40 = twoSumProblem16.BruteForce(intArray34, (int) (short) 0);
        int[] intArray42 = twoSumProblem7.HashMap(intArray40, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem60.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem43.BruteForce(intArray87, (int) (byte) 0);
        int[] intArray91 = twoSumProblem7.HashMap(intArray87, (int) 'a');
        int[] intArray93 = twoSumProblem1.HashMap(intArray87, (int) 'a');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray87, (int) (short) 100);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) '#');
        java.lang.Class<?> wildcardClass61 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem57.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem51.BruteForce(intArray69, (int) (short) 0);
        int[] intArray77 = twoSumProblem36.BruteForce(intArray69, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem36.HashMap(intArray90, (int) (byte) 1);
        int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) '#');
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.TwoPointer(intArray34, (int) (short) 0);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '#');
        java.lang.Class<?> wildcardClass39 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray34, (int) (short) -1);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray41 = twoSumProblem0.BruteForce(intArray39, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem60.HashMap(intArray69, 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.HashMap(intArray82, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        java.lang.Class<?> wildcardClass58 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem0.HashMap(intArray55, 0);
        java.lang.Class<?> wildcardClass64 = intArray55.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem62.TwoPointer(intArray84, (int) (short) 0);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.HashMap(intArray61, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        int[] intArray38 = twoSumProblem19.HashMap(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem19.HashMap(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem19.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.TwoPointer(intArray67, (int) '#');
        int[] intArray73 = twoSumProblem19.HashMap(intArray67, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem19.BruteForce(intArray82, 10);
        int[] intArray86 = twoSumProblem18.BruteForce(intArray84, (int) (byte) 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) ' ');
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem37.HashMap(intArray60, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem37.BruteForce(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem17.TwoPointer(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray72, 100);
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem24.HashMap(intArray33, 100);
        int[] intArray37 = twoSumProblem9.TwoPointer(intArray35, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem9.BruteForce(intArray41, 1);
        int[] intArray47 = twoSumProblem0.TwoPointer(intArray41, 1);
        java.lang.Class<?> wildcardClass48 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.TwoPointer(intArray30, (int) '#');
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem37.HashMap(intArray60, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem37.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem37.HashMap(intArray78, (int) (short) 10);
        int[] intArray82 = twoSumProblem0.BruteForce(intArray78, (int) 'a');
        java.lang.Class<?> wildcardClass83 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem41.HashMap(intArray56, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem41.BruteForce(intArray71, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem41.TwoPointer(intArray79, (int) (short) -1);
        int[] intArray85 = twoSumProblem6.TwoPointer(intArray79, (int) (byte) 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray79, (int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        java.lang.Class<?> wildcardClass36 = intArray33.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem55.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem0.BruteForce(intArray85, 0);
        java.lang.Class<?> wildcardClass92 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        int[] intArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray39 = twoSumProblem0.HashMap(intArray37, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem18.BruteForce(intArray32, (int) (byte) 0);
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem37.BruteForce(intArray65, (int) (byte) 10);
        int[] intArray69 = twoSumProblem0.BruteForce(intArray65, (-1));
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray72 = twoSumProblem0.BruteForce(intArray70, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.HashMap(intArray44, (int) (byte) 100);
        int[] intArray48 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) 100);
        java.lang.Class<?> wildcardClass49 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray83, (int) '#');
        int[] intArray93 = new int[] { (short) 100, 'a', (short) 100 };
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) -1);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, 97, 100]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        int[] intArray46 = new int[] { (short) 1, (byte) 1, (byte) 0 };
        int[] intArray48 = twoSumProblem0.TwoPointer(intArray46, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem49.BruteForce(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.TwoPointer(intArray79, (int) '#');
        int[] intArray85 = twoSumProblem49.HashMap(intArray83, (int) (byte) 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (short) 0);
        java.lang.Class<?> wildcardClass88 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray57 = twoSumProblem0.HashMap(intArray55, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem0.HashMap(intArray41, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem0.BruteForce(intArray47, (int) 'a');
        java.lang.Class<?> wildcardClass52 = intArray47.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem56.HashMap(intArray65, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem56.TwoPointer(intArray80, (int) (short) 0);
        int[] intArray86 = twoSumProblem47.TwoPointer(intArray84, (-1));
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (short) -1);
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray49, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray64, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem69.HashMap(intArray84, (int) (byte) 100);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray86, (int) ' ');
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray43 = twoSumProblem32.HashMap(intArray41, 100);
        int[] intArray45 = twoSumProblem17.TwoPointer(intArray43, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem17.BruteForce(intArray49, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem69.HashMap(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray80, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem54.BruteForce(intArray86, 1);
        int[] intArray92 = twoSumProblem17.HashMap(intArray86, (int) 'a');
        int[] intArray94 = twoSumProblem0.HashMap(intArray86, (int) '#');
        java.lang.Class<?> wildcardClass95 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem36.HashMap(intArray69, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (byte) 0);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        int[] intArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray20 = twoSumProblem0.BruteForce(intArray18, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        int[] intArray11 = twoSumProblem6.BruteForce(intArray9, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        int[] intArray30 = twoSumProblem6.TwoPointer(intArray28, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem6.HashMap(intArray34, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.HashMap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem39.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem6.TwoPointer(intArray73, 0);
        int[] intArray77 = twoSumProblem0.HashMap(intArray75, (-1));
        java.lang.Class<?> wildcardClass78 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem36.HashMap(intArray59, 0);
        int[] intArray65 = twoSumProblem19.BruteForce(intArray63, (int) (byte) 0);
        int[] intArray67 = twoSumProblem1.BruteForce(intArray65, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem1.TwoPointer(intArray84, 0);
        int[] intArray88 = twoSumProblem0.HashMap(intArray86, (int) '4');
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem35.BruteForce(intArray66, (int) '#');
        int[] intArray72 = twoSumProblem15.TwoPointer(intArray70, (int) (short) 100);
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray72, (-1));
        java.lang.Class<?> wildcardClass75 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem9.HashMap(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem27.BruteForce(intArray39, 0);
        int[] intArray45 = twoSumProblem21.TwoPointer(intArray43, (int) (short) 0);
        int[] intArray47 = twoSumProblem9.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem0.TwoPointer(intArray45, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem50.TwoPointer(intArray84, 10);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) 'a');
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem15.BruteForce(intArray62, (int) '#');
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray62, 10);
        java.lang.Class<?> wildcardClass71 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.HashMap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem43.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem26.BruteForce(intArray73, (int) (short) 0);
        int[] intArray81 = twoSumProblem25.BruteForce(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem0.TwoPointer(intArray79, (int) (byte) -1);
        java.lang.Class<?> wildcardClass84 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem40.HashMap(intArray49, 100);
        int[] intArray53 = twoSumProblem25.TwoPointer(intArray51, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem25.BruteForce(intArray57, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem62.BruteForce(intArray80, (int) (short) 0);
        int[] intArray88 = twoSumProblem25.TwoPointer(intArray86, 0);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray86, 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem28.HashMap(intArray70, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem28.BruteForce(intArray90, (int) (short) 0);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray94, (int) '#');
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (short) -1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem52.HashMap(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem52.HashMap(intArray75, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem52.BruteForce(intArray83, (int) '#');
        int[] intArray89 = twoSumProblem0.HashMap(intArray87, (-1));
        java.lang.Class<?> wildcardClass90 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) '4');
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.HashMap(intArray77, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem18.BruteForce(intArray32, (int) (byte) 0);
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, 10);
        int[] intArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray39 = twoSumProblem0.BruteForce(intArray37, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.TwoPointer(intArray66, (int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem47.BruteForce(intArray78, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem47.HashMap(intArray88, (int) (short) 10);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 100);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray37 = twoSumProblem18.HashMap(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem38.BruteForce(intArray68, 0);
        int[] intArray74 = twoSumProblem18.TwoPointer(intArray68, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.BruteForce(intArray68, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem0.BruteForce(intArray82, (int) (short) 100);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        int[] intArray51 = twoSumProblem17.HashMap(intArray47, (int) (byte) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) (short) 10);
        int[] intArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray70 = twoSumProblem0.HashMap(intArray68, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem18.BruteForce(intArray32, (int) (byte) 0);
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        int[] intArray71 = twoSumProblem37.HashMap(intArray67, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem37.HashMap(intArray88, 0);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray88, 1);
        java.lang.Class<?> wildcardClass93 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem15.BruteForce(intArray62, (int) (short) 0);
        int[] intArray70 = twoSumProblem9.TwoPointer(intArray62, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem71.HashMap(intArray80, 100);
        int[] intArray84 = twoSumProblem9.TwoPointer(intArray82, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem9.HashMap(intArray88, 10);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray92, 0);
        java.lang.Class<?> wildcardClass95 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem32.HashMap(intArray70, 0);
        int[] intArray76 = twoSumProblem17.TwoPointer(intArray74, 1);
        int[] intArray78 = twoSumProblem0.BruteForce(intArray76, 1);
        java.lang.Class<?> wildcardClass79 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem57.HashMap(intArray70, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem57.HashMap(intArray80, 0);
        int[] intArray86 = twoSumProblem42.TwoPointer(intArray84, (int) (short) 1);
        int[] intArray88 = twoSumProblem0.HashMap(intArray86, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray52 = twoSumProblem33.HashMap(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem68.BruteForce(intArray86, (int) (short) 0);
        int[] intArray94 = twoSumProblem53.BruteForce(intArray86, (int) (short) -1);
        int[] intArray96 = twoSumProblem33.HashMap(intArray94, (int) (short) 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) 'a');
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem35.HashMap(intArray44, 100);
        int[] intArray48 = twoSumProblem20.TwoPointer(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem20.BruteForce(intArray52, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem63.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem57.BruteForce(intArray75, (int) (short) 0);
        int[] intArray83 = twoSumProblem20.TwoPointer(intArray81, 0);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray81, 100);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.BruteForce(intArray86, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray29 = twoSumProblem18.HashMap(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem42.HashMap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem42.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem30.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem0.BruteForce(intArray78, (-1));
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = twoSumProblem0.HashMap(intArray83, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray63 = twoSumProblem52.HashMap(intArray61, 100);
        int[] intArray65 = twoSumProblem37.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem0.TwoPointer(intArray65, 10);
        java.lang.Class<?> wildcardClass68 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem32.HashMap(intArray70, 0);
        int[] intArray76 = twoSumProblem17.TwoPointer(intArray74, 1);
        int[] intArray78 = twoSumProblem0.BruteForce(intArray76, 1);
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem60.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray87, (int) (byte) 10);
        java.lang.Class<?> wildcardClass90 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '4');
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray41 = twoSumProblem0.TwoPointer(intArray39, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem0.HashMap(intArray75, (int) (short) 100);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.TwoPointer(intArray49, (int) (short) 0);
        int[] intArray53 = twoSumProblem15.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem0.HashMap(intArray53, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem0.HashMap(intArray74, (int) (short) -1);
        java.lang.Class<?> wildcardClass83 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem12.HashMap(intArray50, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem55.BruteForce(intArray83, (int) (byte) 10);
        int[] intArray87 = twoSumProblem12.HashMap(intArray85, (int) (short) 0);
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray85, 100);
        java.lang.Class<?> wildcardClass90 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray18 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray20 = twoSumProblem6.TwoPointer(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray32 = twoSumProblem21.HashMap(intArray30, 100);
        int[] intArray34 = twoSumProblem6.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem6.TwoPointer(intArray38, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem58.HashMap(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem58.HashMap(intArray81, 0);
        int[] intArray87 = twoSumProblem43.TwoPointer(intArray85, (int) (short) 1);
        int[] intArray89 = twoSumProblem6.HashMap(intArray85, 10);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, 1);
        java.lang.Class<?> wildcardClass92 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) '#');
        java.lang.Class<?> wildcardClass61 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        java.lang.Class<?> wildcardClass76 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray63, 10);
        java.lang.Class<?> wildcardClass66 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        int[] intArray38 = twoSumProblem0.HashMap(intArray30, 10);
        java.lang.Class<?> wildcardClass39 = intArray38.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem7.HashMap(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem7.HashMap(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.BruteForce(intArray62, (int) (short) 0);
        int[] intArray70 = twoSumProblem35.HashMap(intArray68, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem71.HashMap(intArray84, (int) '#');
        int[] intArray92 = twoSumProblem35.HashMap(intArray90, (-1));
        int[] intArray94 = twoSumProblem7.HashMap(intArray92, 10);
        int[] intArray96 = twoSumProblem6.HashMap(intArray92, 0);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem48.BruteForce(intArray60, 0);
        int[] intArray66 = twoSumProblem42.BruteForce(intArray60, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem42.HashMap(intArray71, (int) (short) 10);
        int[] intArray79 = twoSumProblem0.BruteForce(intArray71, 0);
        java.lang.Class<?> wildcardClass80 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem17.BruteForce(intArray29, 0);
        int[] intArray35 = twoSumProblem11.BruteForce(intArray29, (int) (short) 0);
        int[] intArray37 = twoSumProblem2.HashMap(intArray35, (int) (short) 1);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray35, (int) (short) -1);
        int[] intArray41 = twoSumProblem0.TwoPointer(intArray39, (int) (short) 100);
        java.lang.Class<?> wildcardClass42 = intArray39.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem30.BruteForce(intArray77, (int) (short) 0);
        int[] intArray85 = twoSumProblem29.BruteForce(intArray83, (int) (short) 1);
        int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, (int) (short) 10);
        java.lang.Class<?> wildcardClass88 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem25.BruteForce(intArray53, (int) (byte) 10);
        int[] intArray57 = twoSumProblem0.HashMap(intArray53, (int) '4');
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = twoSumProblem0.TwoPointer(intArray58, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray83, (int) '#');
        java.lang.Class<?> wildcardClass90 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem18.BruteForce(intArray77, (int) (byte) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem86.HashMap(intArray90, (int) (short) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, (int) 'a');
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.HashMap(intArray97, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        int[] intArray66 = twoSumProblem12.HashMap(intArray64, (int) (short) 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray64, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem75.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem69.BruteForce(intArray87, (int) (short) 0);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) '4');
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray19 = twoSumProblem11.HashMap(intArray15, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        int[] intArray44 = twoSumProblem20.BruteForce(intArray38, (int) (short) 0);
        int[] intArray46 = twoSumProblem11.HashMap(intArray44, (int) (short) 1);
        int[] intArray48 = twoSumProblem2.HashMap(intArray44, 100);
        int[] intArray50 = twoSumProblem1.BruteForce(intArray44, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem51.HashMap(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem51.BruteForce(intArray79, (int) (byte) 10);
        int[] intArray83 = twoSumProblem1.HashMap(intArray81, 1);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, 1);
        java.lang.Class<?> wildcardClass86 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }
}

