package TwoSumProblem;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.TwoPointer(intArray39, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem17.TwoPointer(intArray86, (int) ' ');
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 100);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        java.lang.Class<?> wildcardClass80 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem36.TwoPointer(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray81, (int) (byte) 1);
        java.lang.Class<?> wildcardClass90 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem67.HashMap(intArray80, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem67.HashMap(intArray90, 0);
        int[] intArray96 = twoSumProblem52.TwoPointer(intArray94, (int) (short) 1);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray94, (int) ' ');
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem54.HashMap(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem54.HashMap(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem82.HashMap(intArray91, 100);
        int[] intArray95 = twoSumProblem54.BruteForce(intArray91, (-1));
        int[] intArray97 = twoSumProblem0.BruteForce(intArray95, (int) (byte) 10);
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem55.HashMap(intArray64, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem73.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem67.TwoPointer(intArray89, (int) (short) 0);
        int[] intArray93 = twoSumProblem55.BruteForce(intArray91, (int) '#');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) ' ');
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem52.HashMap(intArray85, (int) (short) 1);
        int[] intArray89 = twoSumProblem0.HashMap(intArray85, 1);
        java.lang.Class<?> wildcardClass90 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem54.HashMap(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem37.HashMap(intArray89, (int) (short) 100);
        int[] intArray93 = twoSumProblem17.TwoPointer(intArray89, 1);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, 10);
        java.lang.Class<?> wildcardClass96 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.BruteForce(intArray35, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem38.BruteForce(intArray68, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem38.TwoPointer(intArray76, (int) (short) -1);
        int[] intArray82 = twoSumProblem20.BruteForce(intArray80, 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, (int) '#');
        java.lang.Class<?> wildcardClass73 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        int[] intArray64 = twoSumProblem18.BruteForce(intArray56, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem65.HashMap(intArray74, 100);
        int[] intArray78 = twoSumProblem18.BruteForce(intArray76, (int) (short) -1);
        int[] intArray80 = twoSumProblem1.TwoPointer(intArray78, (int) (short) 100);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 10);
        java.lang.Class<?> wildcardClass83 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.BruteForce(intArray35, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem38.BruteForce(intArray68, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem38.TwoPointer(intArray76, (int) (short) -1);
        int[] intArray82 = twoSumProblem20.BruteForce(intArray80, 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem18.TwoPointer(intArray56, (int) (short) -1);
        int[] intArray62 = twoSumProblem0.BruteForce(intArray60, 0);
        int[] intArray68 = new int[] { 10, (short) -1, (byte) 0, (short) -1, ' ' };
        int[] intArray70 = twoSumProblem0.HashMap(intArray68, (-1));
        java.lang.Class<?> wildcardClass71 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[10, -1, 0, -1, 32]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem47.HashMap(intArray85, 0);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) -1);
        java.lang.Class<?> wildcardClass92 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem18.TwoPointer(intArray56, (int) (short) -1);
        int[] intArray62 = twoSumProblem0.BruteForce(intArray60, 0);
        java.lang.Class<?> wildcardClass63 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray89, (-1));
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.BruteForce(intArray94, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem49.TwoPointer(intArray83, 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray83, 1);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 100);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem60.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem45.TwoPointer(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) (byte) 10);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem0.TwoPointer(intArray65, (int) (byte) 0);
        java.lang.Class<?> wildcardClass72 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem49.HashMap(intArray64, (int) (byte) 100);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray64, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem69.HashMap(intArray82, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem89 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        int[] intArray94 = twoSumProblem89.BruteForce(intArray92, (int) '#');
        int[] intArray96 = twoSumProblem69.HashMap(intArray92, 0);
        int[] intArray98 = twoSumProblem0.HashMap(intArray92, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        int[] intArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray35 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem53.HashMap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem53.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem35.BruteForce(intArray83, (int) (short) 100);
        int[] intArray91 = twoSumProblem20.BruteForce(intArray83, 1);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, 10);
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem28.HashMap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem28.BruteForce(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem28.HashMap(intArray66, 0);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, 100);
        java.lang.Class<?> wildcardClass73 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray82, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.BruteForce(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, (int) (short) 100);
        java.lang.Class<?> wildcardClass72 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem43.BruteForce(intArray76, (int) (short) -1);
        int[] intArray86 = twoSumProblem0.BruteForce(intArray84, (int) (byte) 10);
        java.lang.Class<?> wildcardClass87 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem27.TwoPointer(intArray63, (int) (short) -1);
        int[] intArray71 = twoSumProblem18.HashMap(intArray69, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem18.HashMap(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) ' ');
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem70.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem64.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem49.BruteForce(intArray82, (int) (short) -1);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, 10);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem15.BruteForce(intArray63, (int) (short) 100);
        int[] intArray71 = twoSumProblem0.BruteForce(intArray63, 1);
        java.lang.Class<?> wildcardClass72 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem65.BruteForce(intArray83, (int) (short) 0);
        int[] intArray91 = twoSumProblem56.HashMap(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem47.HashMap(intArray89, 100);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) 100);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem38.HashMap(intArray71, (int) (short) 1);
        int[] intArray75 = twoSumProblem21.HashMap(intArray73, (int) (short) 100);
        int[] intArray77 = twoSumProblem1.TwoPointer(intArray73, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.TwoPointer(intArray90, (int) '#');
        int[] intArray96 = twoSumProblem1.BruteForce(intArray94, 0);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (byte) 10);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        int[] intArray66 = twoSumProblem12.HashMap(intArray64, (int) (short) 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray64, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem75.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem69.BruteForce(intArray87, (int) (short) 0);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) '4');
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem25.TwoPointer(intArray61, (int) (short) -1);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, (int) 'a');
        java.lang.Class<?> wildcardClass70 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        int[] intArray66 = twoSumProblem12.HashMap(intArray64, (int) (short) 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray64, 10);
        java.lang.Class<?> wildcardClass69 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem36.TwoPointer(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray81, (int) (byte) 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem46.HashMap(intArray55, 100);
        int[] intArray59 = twoSumProblem31.TwoPointer(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem75.HashMap(intArray84, 100);
        int[] intArray88 = twoSumProblem60.TwoPointer(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem31.HashMap(intArray86, 100);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray86, (int) '4');
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem1.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem36.TwoPointer(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem1.TwoPointer(intArray87, (int) (short) 10);
        int[] intArray91 = twoSumProblem0.HashMap(intArray87, (int) (short) 1);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray70, (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem63.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem57.BruteForce(intArray75, (int) (short) 0);
        int[] intArray83 = twoSumProblem42.BruteForce(intArray75, (int) (short) -1);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) 'a');
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem45.HashMap(intArray60, (int) (byte) 100);
        int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) (short) -1);
        int[] intArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray67 = twoSumProblem0.HashMap(intArray65, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (byte) 10);
        java.lang.Class<?> wildcardClass80 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, 1);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem17.TwoPointer(intArray53, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem60.BruteForce(intArray75, (int) (short) 1);
        int[] intArray79 = twoSumProblem17.BruteForce(intArray75, (int) (short) 1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) (short) 1);
        java.lang.Class<?> wildcardClass82 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem47.BruteForce(intArray78, (int) '#');
        int[] intArray84 = twoSumProblem0.BruteForce(intArray82, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        java.lang.Class<?> wildcardClass62 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        java.lang.Class<?> wildcardClass29 = intArray28.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        java.lang.Class<?> wildcardClass54 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem18.TwoPointer(intArray56, (int) (short) -1);
        int[] intArray62 = twoSumProblem0.BruteForce(intArray60, 0);
        java.lang.Class<?> wildcardClass63 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray63 = twoSumProblem52.HashMap(intArray61, 100);
        int[] intArray65 = twoSumProblem37.TwoPointer(intArray63, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.TwoPointer(intArray65, 0);
        java.lang.Class<?> wildcardClass68 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem65.BruteForce(intArray83, (int) (short) 0);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray83, (int) (byte) 1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem9.HashMap(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem9.HashMap(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem37.HashMap(intArray46, 100);
        int[] intArray50 = twoSumProblem9.BruteForce(intArray46, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem51.TwoPointer(intArray89, (int) (short) -1);
        int[] intArray95 = twoSumProblem9.HashMap(intArray93, (int) '4');
        int[] intArray97 = twoSumProblem0.BruteForce(intArray93, (int) (short) 10);
        java.lang.Class<?> wildcardClass98 = intArray97.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) 'a');
        java.lang.Class<?> wildcardClass91 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, 0);
        java.lang.Class<?> wildcardClass54 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem6.HashMap(intArray86, (int) 'a');
        int[] intArray92 = twoSumProblem0.HashMap(intArray86, (int) 'a');
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem46.HashMap(intArray55, 100);
        int[] intArray59 = twoSumProblem31.TwoPointer(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem75.HashMap(intArray84, 100);
        int[] intArray88 = twoSumProblem60.TwoPointer(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem31.HashMap(intArray86, 100);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray86, (int) '4');
        java.lang.Class<?> wildcardClass93 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem0.HashMap(intArray72, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, 0);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem29.BruteForce(intArray47, (int) (short) 0);
        int[] intArray55 = twoSumProblem20.HashMap(intArray53, (int) (short) 1);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem58.HashMap(intArray71, (int) '#');
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray71, 0);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.HashMap(intArray80, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem47.HashMap(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem30.HashMap(intArray82, (int) (short) 100);
        int[] intArray86 = twoSumProblem29.TwoPointer(intArray84, (int) (byte) 10);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) '#');
        java.lang.Class<?> wildcardClass89 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.BruteForce(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray92, (int) (short) -1);
        java.lang.Class<?> wildcardClass97 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem45.HashMap(intArray60, (int) (byte) 100);
        int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) (short) -1);
        java.lang.Class<?> wildcardClass65 = intArray64.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray70, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.BruteForce(intArray90, (int) (short) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (short) 0);
        java.lang.Class<?> wildcardClass95 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        java.lang.Class<?> wildcardClass42 = intArray37.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.TwoPointer(intArray39, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem17.TwoPointer(intArray86, (int) ' ');
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 100);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem69.HashMap(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray80, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem54.BruteForce(intArray86, 1);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray86, (int) (byte) 1);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem35.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray82, (int) '#');
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray70, (int) 'a');
        java.lang.Class<?> wildcardClass75 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray49, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.TwoPointer(intArray70, (int) '#');
        int[] intArray76 = twoSumProblem0.HashMap(intArray70, (int) ' ');
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray63 = twoSumProblem52.HashMap(intArray61, 100);
        int[] intArray65 = twoSumProblem37.TwoPointer(intArray63, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.TwoPointer(intArray65, 0);
        java.lang.Class<?> wildcardClass68 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray69, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem17.TwoPointer(intArray75, 0);
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray79, (int) '4');
        java.lang.Class<?> wildcardClass82 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        java.lang.Class<?> wildcardClass37 = intArray36.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        int[] intArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 100);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem7.BruteForce(intArray19, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        int[] intArray41 = twoSumProblem24.HashMap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem24.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem7.BruteForce(intArray54, (int) (short) 0);
        int[] intArray62 = twoSumProblem1.TwoPointer(intArray54, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem63.HashMap(intArray76, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem63.HashMap(intArray86, 0);
        int[] intArray92 = twoSumProblem1.HashMap(intArray86, 1);
        int[] intArray94 = twoSumProblem0.HashMap(intArray86, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray86, 10);
        java.lang.Class<?> wildcardClass89 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem47.HashMap(intArray85, 0);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) -1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = twoSumProblem0.BruteForce(intArray92, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem38.BruteForce(intArray50, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem55.HashMap(intArray78, 0);
        int[] intArray84 = twoSumProblem38.BruteForce(intArray82, (int) (byte) 0);
        int[] intArray86 = twoSumProblem20.BruteForce(intArray84, (int) (byte) -1);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray86, (int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        int[] intArray64 = twoSumProblem18.BruteForce(intArray56, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem65.HashMap(intArray74, 100);
        int[] intArray78 = twoSumProblem18.BruteForce(intArray76, (int) (short) -1);
        int[] intArray80 = twoSumProblem1.TwoPointer(intArray78, (int) (short) 100);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 10);
        java.lang.Class<?> wildcardClass83 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem25.BruteForce(intArray53, (int) (byte) 10);
        int[] intArray57 = twoSumProblem0.HashMap(intArray53, (int) '4');
        java.lang.Class<?> wildcardClass58 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.BruteForce(intArray30, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        int[] intArray58 = twoSumProblem12.BruteForce(intArray50, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem12.HashMap(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem0.HashMap(intArray75, (int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem0.HashMap(intArray40, (int) '4');
        java.lang.Class<?> wildcardClass47 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem65.BruteForce(intArray83, (int) (short) 0);
        int[] intArray91 = twoSumProblem56.HashMap(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem47.HashMap(intArray89, 100);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) 100);
        java.lang.Class<?> wildcardClass96 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem34.HashMap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem34.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem19.TwoPointer(intArray64, (int) '#');
        int[] intArray72 = twoSumProblem18.TwoPointer(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem73.HashMap(intArray88, (int) (byte) 100);
        int[] intArray92 = twoSumProblem18.TwoPointer(intArray88, (int) (byte) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray88, (int) (short) 10);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.HashMap(intArray95, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem49.TwoPointer(intArray83, 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray83, 1);
        java.lang.Class<?> wildcardClass88 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem47.HashMap(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem30.HashMap(intArray82, (int) (short) 100);
        int[] intArray86 = twoSumProblem29.TwoPointer(intArray84, (int) (byte) 10);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) '#');
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        java.lang.Class<?> wildcardClass29 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem25.BruteForce(intArray53, (int) (byte) 10);
        int[] intArray57 = twoSumProblem0.HashMap(intArray53, (int) '4');
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, 0);
        java.lang.Class<?> wildcardClass70 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.HashMap(intArray92, (int) (byte) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) (short) -1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem51.TwoPointer(intArray87, (int) (short) -1);
        int[] intArray95 = twoSumProblem42.HashMap(intArray93, (int) (short) -1);
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray93, 0);
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem18.BruteForce(intArray77, (int) (byte) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 1);
        java.lang.Class<?> wildcardClass86 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 100);
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        int[] intArray63 = twoSumProblem0.TwoPointer(intArray61, 0);
        java.lang.Class<?> wildcardClass64 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        java.lang.Class<?> wildcardClass42 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem54.HashMap(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem54.HashMap(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem82.HashMap(intArray91, 100);
        int[] intArray95 = twoSumProblem54.BruteForce(intArray91, (-1));
        int[] intArray97 = twoSumProblem0.BruteForce(intArray91, 100);
        java.lang.Class<?> wildcardClass98 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem7.HashMap(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem7.HashMap(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.BruteForce(intArray62, (int) (short) 0);
        int[] intArray70 = twoSumProblem35.HashMap(intArray68, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem71.HashMap(intArray84, (int) '#');
        int[] intArray92 = twoSumProblem35.HashMap(intArray90, (-1));
        int[] intArray94 = twoSumProblem7.HashMap(intArray92, 10);
        int[] intArray96 = twoSumProblem6.BruteForce(intArray94, (int) (short) 100);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, 10);
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        int[] intArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray49 = twoSumProblem0.TwoPointer(intArray47, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        java.lang.Class<?> wildcardClass31 = intArray28.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray70, (int) 'a');
        java.lang.Class<?> wildcardClass75 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem36.TwoPointer(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray81, (int) (byte) 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        java.lang.Class<?> wildcardClass52 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem0.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray87, (int) 'a');
        java.lang.Class<?> wildcardClass90 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem19.HashMap(intArray34, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem19.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem1.BruteForce(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem56.HashMap(intArray69, (int) '#');
        int[] intArray77 = twoSumProblem1.TwoPointer(intArray69, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem1.BruteForce(intArray94, (-1));
        int[] intArray98 = twoSumProblem0.HashMap(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray45, (int) '#');
        java.lang.Class<?> wildcardClass52 = intArray45.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem28.HashMap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem28.BruteForce(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem28.HashMap(intArray66, 0);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, 100);
        java.lang.Class<?> wildcardClass73 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.BruteForce(intArray35, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem17.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem64.HashMap(intArray73, 100);
        int[] intArray77 = twoSumProblem17.BruteForce(intArray75, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 100);
        java.lang.Class<?> wildcardClass80 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray87 = twoSumProblem52.HashMap(intArray81, (int) (short) 10);
        int[] intArray89 = twoSumProblem0.HashMap(intArray81, (int) (byte) 10);
        java.lang.Class<?> wildcardClass90 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray62 = twoSumProblem0.HashMap(intArray60, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.TwoPointer(intArray59, 0);
        java.lang.Class<?> wildcardClass66 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem38.HashMap(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem38.HashMap(intArray61, 0);
        int[] intArray67 = twoSumProblem23.TwoPointer(intArray65, (int) (short) 1);
        int[] intArray69 = twoSumProblem6.BruteForce(intArray67, (int) '4');
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, (int) '4');
        java.lang.Class<?> wildcardClass72 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem54.HashMap(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem54.HashMap(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem82.HashMap(intArray91, 100);
        int[] intArray95 = twoSumProblem54.BruteForce(intArray91, (-1));
        int[] intArray97 = twoSumProblem0.BruteForce(intArray91, 100);
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        int[] intArray71 = twoSumProblem25.BruteForce(intArray63, (int) '4');
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem74.HashMap(intArray83, 100);
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, 1);
        java.lang.Class<?> wildcardClass88 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        int[] intArray71 = twoSumProblem25.BruteForce(intArray63, (int) '4');
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, 0);
        java.lang.Class<?> wildcardClass74 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem38.HashMap(intArray71, (int) (short) 1);
        int[] intArray75 = twoSumProblem21.HashMap(intArray73, (int) (short) 100);
        int[] intArray77 = twoSumProblem1.TwoPointer(intArray73, 1);
        int[] intArray79 = twoSumProblem0.HashMap(intArray77, (int) (short) 1);
        java.lang.Class<?> wildcardClass80 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem0.HashMap(intArray40, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem47.BruteForce(intArray59, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem64.HashMap(intArray87, 0);
        int[] intArray93 = twoSumProblem47.BruteForce(intArray91, (int) (byte) 0);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) '4');
        java.lang.Class<?> wildcardClass96 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem60.HashMap(intArray69, 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray87, (int) '#');
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem49.HashMap(intArray82, (int) (short) 1);
        int[] intArray86 = twoSumProblem32.HashMap(intArray84, (int) (short) 100);
        int[] intArray88 = twoSumProblem31.TwoPointer(intArray86, (int) (byte) 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, (int) (short) 1);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.BruteForce(intArray72, (int) (short) 1);
        int[] intArray76 = twoSumProblem0.BruteForce(intArray72, (int) (short) -1);
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray80, (int) 'a');
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem47.BruteForce(intArray78, (int) '#');
        int[] intArray84 = twoSumProblem0.BruteForce(intArray82, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem38.BruteForce(intArray50, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem55.HashMap(intArray78, 0);
        int[] intArray84 = twoSumProblem38.BruteForce(intArray82, (int) (byte) 0);
        int[] intArray86 = twoSumProblem20.BruteForce(intArray84, (int) (byte) -1);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray86, (int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem0.BruteForce(intArray58, 1);
        java.lang.Class<?> wildcardClass63 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        java.lang.Class<?> wildcardClass42 = intArray39.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem1.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem1.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem81.HashMap(intArray90, 100);
        int[] intArray94 = twoSumProblem53.BruteForce(intArray90, (-1));
        int[] intArray96 = twoSumProblem1.TwoPointer(intArray90, 100);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray90, 10);
        java.lang.Class<?> wildcardClass99 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem40.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem34.BruteForce(intArray52, (int) (short) 0);
        int[] intArray60 = twoSumProblem25.HashMap(intArray58, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem25.BruteForce(intArray77, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem25.TwoPointer(intArray83, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray87, (int) (byte) -1);
        java.lang.Class<?> wildcardClass90 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray29 = twoSumProblem18.HashMap(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem30.HashMap(intArray45, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem30.BruteForce(intArray60, 0);
        int[] intArray66 = twoSumProblem18.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem67.HashMap(intArray82, (int) (byte) 100);
        int[] intArray86 = twoSumProblem18.BruteForce(intArray82, (int) (short) -1);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray82, (-1));
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem36.BruteForce(intArray54, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem36.HashMap(intArray65, (int) (short) 10);
        int[] intArray73 = twoSumProblem0.HashMap(intArray65, (-1));
        java.lang.Class<?> wildcardClass74 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray70, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem1.TwoPointer(intArray92, 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (short) -1);
        java.lang.Class<?> wildcardClass97 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem40.HashMap(intArray63, 0);
        int[] intArray69 = twoSumProblem25.TwoPointer(intArray67, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem76.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem70.BruteForce(intArray88, (int) (short) 0);
        int[] intArray96 = twoSumProblem25.TwoPointer(intArray88, (int) '4');
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, 1);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        java.lang.Class<?> wildcardClass12 = intArray11.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray49, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.TwoPointer(intArray70, (int) '#');
        int[] intArray76 = twoSumProblem0.HashMap(intArray70, (int) ' ');
        java.lang.Class<?> wildcardClass77 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem60.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem45.TwoPointer(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) (byte) 10);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem0.TwoPointer(intArray63, (int) '4');
        java.lang.Class<?> wildcardClass72 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem24.BruteForce(intArray42, (int) (short) 0);
        int[] intArray50 = twoSumProblem15.HashMap(intArray48, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem15.BruteForce(intArray67, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem15.TwoPointer(intArray73, 0);
        int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) '4');
        java.lang.Class<?> wildcardClass80 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem15.HashMap(intArray53, 0);
        int[] intArray59 = twoSumProblem0.TwoPointer(intArray57, 1);
        java.lang.Class<?> wildcardClass60 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.BruteForce(intArray58, (int) (short) 1);
        int[] intArray62 = twoSumProblem0.BruteForce(intArray58, (int) (short) 1);
        java.lang.Class<?> wildcardClass63 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        java.lang.Class<?> wildcardClass37 = intArray32.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        java.lang.Class<?> wildcardClass76 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray18 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray20 = twoSumProblem6.TwoPointer(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray32 = twoSumProblem21.HashMap(intArray30, 100);
        int[] intArray34 = twoSumProblem6.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem52.HashMap(intArray85, (int) (short) 1);
        int[] intArray89 = twoSumProblem35.HashMap(intArray87, (int) (short) 100);
        int[] intArray91 = twoSumProblem6.TwoPointer(intArray89, (int) (short) 100);
        int[] intArray93 = twoSumProblem0.HashMap(intArray89, 100);
        java.lang.Class<?> wildcardClass94 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem54.HashMap(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem54.HashMap(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem54.BruteForce(intArray85, (int) '#');
        int[] intArray91 = twoSumProblem0.HashMap(intArray85, (int) (byte) 100);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.BruteForce(intArray30, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        int[] intArray58 = twoSumProblem12.BruteForce(intArray50, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem12.HashMap(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem0.HashMap(intArray75, (int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem70.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem64.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem49.BruteForce(intArray82, (int) (short) -1);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, 10);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.HashMap(intArray93, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) 'a');
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem1.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem36.TwoPointer(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem1.TwoPointer(intArray87, (int) (short) 10);
        int[] intArray91 = twoSumProblem0.HashMap(intArray87, (int) (short) 1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem69.HashMap(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray80, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem54.BruteForce(intArray86, 1);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray86, (int) (byte) 1);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem34.HashMap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem34.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem19.TwoPointer(intArray64, (int) '#');
        int[] intArray72 = twoSumProblem18.TwoPointer(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem73.HashMap(intArray88, (int) (byte) 100);
        int[] intArray92 = twoSumProblem18.TwoPointer(intArray88, (int) (byte) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray88, (int) (short) 10);
        java.lang.Class<?> wildcardClass95 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem69.HashMap(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray80, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem54.BruteForce(intArray86, 1);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray86, (int) (byte) 1);
        java.lang.Class<?> wildcardClass93 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem65.HashMap(intArray78, (int) '#');
        int[] intArray86 = twoSumProblem29.HashMap(intArray84, (-1));
        int[] intArray88 = twoSumProblem1.HashMap(intArray86, 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, 0);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray55, (int) '4');
        int[] intArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray64 = twoSumProblem0.BruteForce(intArray62, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        int[] intArray71 = twoSumProblem25.BruteForce(intArray63, (int) '4');
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem74.HashMap(intArray83, 100);
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, 1);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem0.HashMap(intArray49, (int) (byte) -1);
        java.lang.Class<?> wildcardClass56 = intArray49.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem60.HashMap(intArray90, (int) (byte) -1);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray90, 0);
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        java.lang.Class<?> wildcardClass17 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem0.TwoPointer(intArray65, (int) (byte) 0);
        java.lang.Class<?> wildcardClass72 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem9.BruteForce(intArray21, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem44.HashMap(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem44.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem26.BruteForce(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem9.HashMap(intArray80, 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) ' ');
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem51.HashMap(intArray60, 100);
        int[] intArray64 = twoSumProblem36.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem81.HashMap(intArray85, (int) (short) 100);
        int[] intArray91 = twoSumProblem80.HashMap(intArray89, 100);
        int[] intArray93 = twoSumProblem65.TwoPointer(intArray91, (int) (byte) 0);
        int[] intArray95 = twoSumProblem36.HashMap(intArray91, 100);
        int[] intArray97 = twoSumProblem0.HashMap(intArray91, 10);
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) '4');
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem0.HashMap(intArray40, (int) '4');
        java.lang.Class<?> wildcardClass47 = intArray40.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, 1);
        java.lang.Class<?> wildcardClass96 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 100);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem60.HashMap(intArray90, (int) (byte) -1);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray90, 0);
        java.lang.Class<?> wildcardClass97 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem54.HashMap(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem37.HashMap(intArray89, (int) (short) 100);
        int[] intArray93 = twoSumProblem25.HashMap(intArray89, 10);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray89, 0);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray45, (int) '#');
        int[] intArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem40.HashMap(intArray49, 100);
        int[] intArray53 = twoSumProblem25.TwoPointer(intArray51, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem69.HashMap(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem25.HashMap(intArray80, 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray84, (int) (byte) 10);
        java.lang.Class<?> wildcardClass87 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem60.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem45.TwoPointer(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem92 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray95 = new int[] { (short) -1, (short) 0 };
        int[] intArray97 = twoSumProblem92.BruteForce(intArray95, (int) '#');
        int[] intArray99 = twoSumProblem0.HashMap(intArray95, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 1]");
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem37.TwoPointer(intArray82, (int) '#');
        int[] intArray90 = twoSumProblem36.TwoPointer(intArray82, (int) (byte) -1);
        int[] intArray92 = twoSumProblem0.HashMap(intArray82, (int) (byte) 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.BruteForce(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        java.lang.Class<?> wildcardClass37 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem68.HashMap(intArray77, 100);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, 0);
        java.lang.Class<?> wildcardClass82 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) (byte) 0);
        int[] intArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray67 = twoSumProblem0.BruteForce(intArray65, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem24.BruteForce(intArray42, (int) (short) 0);
        int[] intArray50 = twoSumProblem15.HashMap(intArray48, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem15.BruteForce(intArray67, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem15.TwoPointer(intArray73, 0);
        int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) '4');
        java.lang.Class<?> wildcardClass80 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        java.lang.Class<?> wildcardClass47 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem37.BruteForce(intArray67, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem37.HashMap(intArray86, (int) (short) 100);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray86, (int) (short) 10);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray37 = twoSumProblem18.HashMap(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem18.HashMap(intArray41, 0);
        int[] intArray47 = twoSumProblem1.BruteForce(intArray45, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem48.HashMap(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem66.BruteForce(intArray78, 0);
        int[] intArray84 = twoSumProblem60.TwoPointer(intArray82, (int) (short) 0);
        int[] intArray86 = twoSumProblem48.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem1.HashMap(intArray84, (int) (short) 1);
        int[] intArray90 = twoSumProblem0.HashMap(intArray84, 1);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        java.lang.Class<?> wildcardClass68 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.TwoPointer(intArray78, (int) (short) 0);
        int[] intArray82 = twoSumProblem44.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem43.HashMap(intArray80, (int) (byte) 1);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 100);
        java.lang.Class<?> wildcardClass87 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.TwoPointer(intArray59, (int) 'a');
        java.lang.Class<?> wildcardClass66 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.BruteForce(intArray30, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        int[] intArray58 = twoSumProblem12.BruteForce(intArray50, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem12.HashMap(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem0.HashMap(intArray75, (int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem50.HashMap(intArray73, 0);
        int[] intArray79 = twoSumProblem1.TwoPointer(intArray77, (int) ' ');
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray77, (-1));
        java.lang.Class<?> wildcardClass82 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem15.BruteForce(intArray62, (int) '#');
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray62, 10);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray73 = twoSumProblem0.HashMap(intArray71, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem49.BruteForce(intArray77, (int) (byte) 10);
        int[] intArray81 = twoSumProblem0.BruteForce(intArray77, 0);
        java.lang.Class<?> wildcardClass82 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.BruteForce(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, (int) (short) 100);
        java.lang.Class<?> wildcardClass72 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray37 = twoSumProblem18.HashMap(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem18.HashMap(intArray41, 0);
        int[] intArray47 = twoSumProblem1.BruteForce(intArray45, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem48.HashMap(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem66.BruteForce(intArray78, 0);
        int[] intArray84 = twoSumProblem60.TwoPointer(intArray82, (int) (short) 0);
        int[] intArray86 = twoSumProblem48.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem1.HashMap(intArray84, (int) (short) 1);
        int[] intArray90 = twoSumProblem0.HashMap(intArray84, 1);
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem25.BruteForce(intArray53, (int) (byte) 10);
        int[] intArray57 = twoSumProblem0.HashMap(intArray53, (int) '4');
        java.lang.Class<?> wildcardClass58 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        java.lang.Class<?> wildcardClass29 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        int[] intArray60 = twoSumProblem0.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem61.HashMap(intArray76, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem61.BruteForce(intArray91, 0);
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray91, (int) (short) 1);
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        java.lang.Class<?> wildcardClass57 = intArray50.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray77, (int) 'a');
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem63.HashMap(intArray76, (int) '#');
        int[] intArray84 = twoSumProblem43.BruteForce(intArray82, 0);
        int[] intArray86 = twoSumProblem0.BruteForce(intArray82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass87 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem17.BruteForce(intArray72, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem84.HashMap(intArray88, (int) (short) 100);
        int[] intArray94 = twoSumProblem75.HashMap(intArray88, (int) '#');
        int[] intArray96 = twoSumProblem17.TwoPointer(intArray88, 0);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, 1);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        int[] intArray51 = twoSumProblem17.HashMap(intArray47, (int) (byte) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) (short) 10);
        int[] intArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray70 = twoSumProblem0.BruteForce(intArray68, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray89, (-1));
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray70, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.BruteForce(intArray90, (int) (short) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (short) 0);
        java.lang.Class<?> wildcardClass95 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem9.HashMap(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem9.HashMap(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem37.HashMap(intArray46, 100);
        int[] intArray50 = twoSumProblem9.BruteForce(intArray46, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem51.TwoPointer(intArray89, (int) (short) -1);
        int[] intArray95 = twoSumProblem9.HashMap(intArray93, (int) '4');
        int[] intArray97 = twoSumProblem0.BruteForce(intArray93, (int) (short) 10);
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.BruteForce(intArray80, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        java.lang.Class<?> wildcardClass43 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem41.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem35.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem26.HashMap(intArray59, (int) (short) 1);
        int[] intArray63 = twoSumProblem17.HashMap(intArray59, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem17.HashMap(intArray69, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem17.TwoPointer(intArray76, (int) 'a');
        int[] intArray84 = twoSumProblem0.BruteForce(intArray82, 0);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray76, 0);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) '#');
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        int[] intArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray20 = twoSumProblem0.BruteForce(intArray18, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        java.lang.Class<?> wildcardClass42 = intArray41.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        java.lang.Class<?> wildcardClass55 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        int[] intArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray20 = twoSumProblem0.HashMap(intArray18, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem25.BruteForce(intArray53, (int) (byte) 10);
        int[] intArray57 = twoSumProblem0.HashMap(intArray53, (int) '4');
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = twoSumProblem0.TwoPointer(intArray58, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        int[] intArray63 = twoSumProblem0.TwoPointer(intArray61, 0);
        java.lang.Class<?> wildcardClass64 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.HashMap(intArray61, (int) (short) -1);
        java.lang.Class<?> wildcardClass68 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (short) 100);
        java.lang.Class<?> wildcardClass74 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem0.HashMap(intArray49, (int) (byte) -1);
        java.lang.Class<?> wildcardClass56 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 100);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem54.HashMap(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem37.HashMap(intArray89, (int) (short) 100);
        int[] intArray93 = twoSumProblem25.HashMap(intArray89, 10);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray89, 0);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem17.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem69.BruteForce(intArray84, (int) (short) 1);
        int[] intArray88 = twoSumProblem17.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray84, (int) (byte) -1);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem38.BruteForce(intArray50, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem55.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem38.BruteForce(intArray85, (int) (short) 0);
        int[] intArray93 = twoSumProblem37.BruteForce(intArray91, (int) (short) 1);
        int[] intArray95 = twoSumProblem0.HashMap(intArray91, (int) (short) 1);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 100);
        java.lang.Class<?> wildcardClass55 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        java.lang.Class<?> wildcardClass33 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem63.HashMap(intArray76, (int) '#');
        int[] intArray84 = twoSumProblem43.BruteForce(intArray82, 0);
        int[] intArray86 = twoSumProblem0.BruteForce(intArray82, (int) (byte) 0);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray89 = twoSumProblem0.HashMap(intArray87, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        int[] intArray58 = new int[] { 'a', (short) 10, (byte) 0, (byte) -1, (byte) 1, (byte) 0 };
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (byte) 10);
        java.lang.Class<?> wildcardClass61 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 10, 0, -1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.TwoPointer(intArray34, (int) (short) 0);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '#');
        java.lang.Class<?> wildcardClass39 = intArray36.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) (byte) 10);
        java.lang.Class<?> wildcardClass91 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem37.TwoPointer(intArray82, (int) '#');
        int[] intArray90 = twoSumProblem36.TwoPointer(intArray82, (int) (byte) -1);
        int[] intArray92 = twoSumProblem0.HashMap(intArray82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        java.lang.Class<?> wildcardClass37 = intArray32.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem42.HashMap(intArray65, 0);
        int[] intArray71 = twoSumProblem25.BruteForce(intArray69, (int) (byte) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray69, (int) ' ');
        java.lang.Class<?> wildcardClass74 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem51.TwoPointer(intArray87, (int) (short) -1);
        int[] intArray95 = twoSumProblem36.HashMap(intArray93, (int) (byte) 0);
        int[] intArray97 = twoSumProblem0.BruteForce(intArray93, 0);
        java.lang.Class<?> wildcardClass98 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem70.HashMap(intArray85, (int) (byte) 100);
        int[] intArray89 = twoSumProblem55.HashMap(intArray85, (int) (byte) -1);
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) (short) 1);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem65.BruteForce(intArray83, (int) (short) 0);
        int[] intArray91 = twoSumProblem56.HashMap(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem47.HashMap(intArray89, 100);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) 100);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem9.BruteForce(intArray21, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem44.HashMap(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem44.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem26.BruteForce(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem9.HashMap(intArray80, 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) ' ');
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, 0);
        java.lang.Class<?> wildcardClass70 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem18.BruteForce(intArray77, (int) (byte) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 1);
        java.lang.Class<?> wildcardClass86 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray45 = twoSumProblem0.BruteForce(intArray43, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.HashMap(intArray61, (int) (short) -1);
        java.lang.Class<?> wildcardClass68 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray89, (-1));
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem1.TwoPointer(intArray83, (int) (byte) 0);
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, (int) (byte) 100);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray78 = twoSumProblem0.BruteForce(intArray76, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray62 = twoSumProblem0.BruteForce(intArray60, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem42.HashMap(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem42.BruteForce(intArray73, (int) '#');
        int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) (short) 0);
        java.lang.Class<?> wildcardClass80 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray55, (int) '4');
        java.lang.Class<?> wildcardClass62 = intArray55.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem78.HashMap(intArray87, 100);
        int[] intArray91 = twoSumProblem0.HashMap(intArray87, (int) (short) 100);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        java.lang.Class<?> wildcardClass17 = intArray16.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem40.HashMap(intArray49, 100);
        int[] intArray53 = twoSumProblem25.TwoPointer(intArray51, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem69.HashMap(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem25.HashMap(intArray80, 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray84, (int) (byte) 10);
        java.lang.Class<?> wildcardClass87 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.BruteForce(intArray52, 100);
        java.lang.Class<?> wildcardClass59 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem19.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem68.HashMap(intArray83, (int) (byte) 100);
        int[] intArray87 = twoSumProblem19.BruteForce(intArray83, (int) (short) -1);
        int[] intArray89 = twoSumProblem1.TwoPointer(intArray83, (-1));
        int[] intArray91 = twoSumProblem0.BruteForce(intArray83, (int) (byte) 0);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem70.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem64.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem49.BruteForce(intArray82, (int) (short) -1);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, 10);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        java.lang.Class<?> wildcardClass74 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem41.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem35.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem26.HashMap(intArray59, (int) (short) 1);
        int[] intArray63 = twoSumProblem17.HashMap(intArray59, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem17.HashMap(intArray69, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem17.TwoPointer(intArray76, (int) 'a');
        int[] intArray84 = twoSumProblem0.BruteForce(intArray82, 0);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        java.lang.Class<?> wildcardClass78 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.BruteForce(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray92, (int) (short) 10);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        int[] intArray64 = twoSumProblem18.BruteForce(intArray62, (int) (byte) 0);
        int[] intArray66 = twoSumProblem0.BruteForce(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, 0);
        java.lang.Class<?> wildcardClass86 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.BruteForce(intArray61, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray87 = twoSumProblem68.HashMap(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem43.BruteForce(intArray81, (int) '4');
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) 'a');
        java.lang.Class<?> wildcardClass92 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        int[] intArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray19 = twoSumProblem0.TwoPointer(intArray17, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem18.BruteForce(intArray82, (int) (byte) -1);
        int[] intArray86 = twoSumProblem0.HashMap(intArray84, 100);
        java.lang.Class<?> wildcardClass87 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.HashMap(intArray80, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem6.TwoPointer(intArray44, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem49.TwoPointer(intArray71, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem49.HashMap(intArray77, (int) (short) 10);
        int[] intArray83 = twoSumProblem6.TwoPointer(intArray77, (int) (short) 100);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, 1);
        java.lang.Class<?> wildcardClass86 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.BruteForce(intArray35, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem38.BruteForce(intArray68, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem38.TwoPointer(intArray76, (int) (short) -1);
        int[] intArray82 = twoSumProblem20.BruteForce(intArray80, 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 10);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.HashMap(intArray85, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray53, (int) (short) 10);
        java.lang.Class<?> wildcardClass58 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.HashMap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem29.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) -1);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem55.TwoPointer(intArray89, 10);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) (short) 100);
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem68.HashMap(intArray77, 100);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, 0);
        java.lang.Class<?> wildcardClass82 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray80, (int) (byte) 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray89 = twoSumProblem0.TwoPointer(intArray87, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem24.BruteForce(intArray42, (int) (short) 0);
        int[] intArray50 = twoSumProblem9.BruteForce(intArray42, (int) (short) -1);
        int[] intArray52 = twoSumProblem0.BruteForce(intArray42, (int) (short) 10);
        java.lang.Class<?> wildcardClass53 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        java.lang.Class<?> wildcardClass33 = intArray32.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem49.TwoPointer(intArray83, 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray83, 1);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.BruteForce(intArray35, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem38.BruteForce(intArray68, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem38.TwoPointer(intArray76, (int) (short) -1);
        int[] intArray82 = twoSumProblem20.BruteForce(intArray80, 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 10);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.HashMap(intArray85, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.BruteForce(intArray52, 100);
        java.lang.Class<?> wildcardClass59 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.BruteForce(intArray35, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem17.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem64.HashMap(intArray73, 100);
        int[] intArray77 = twoSumProblem17.BruteForce(intArray75, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 100);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (byte) 10);
        java.lang.Class<?> wildcardClass80 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.TwoPointer(intArray67, (int) (short) 0);
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, 10);
        java.lang.Class<?> wildcardClass72 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray63 = twoSumProblem52.HashMap(intArray61, 100);
        int[] intArray65 = twoSumProblem37.TwoPointer(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem37.BruteForce(intArray69, 1);
        int[] intArray75 = twoSumProblem0.HashMap(intArray69, (int) 'a');
        java.lang.Class<?> wildcardClass76 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.BruteForce(intArray58, (int) (short) 1);
        int[] intArray62 = twoSumProblem0.BruteForce(intArray58, (int) (short) 1);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray65 = twoSumProblem0.BruteForce(intArray63, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.HashMap(intArray85, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray80, (int) '#');
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem18.TwoPointer(intArray56, (int) (short) -1);
        int[] intArray62 = twoSumProblem0.BruteForce(intArray60, 0);
        int[] intArray68 = new int[] { 10, (short) -1, (byte) 0, (short) -1, ' ' };
        int[] intArray70 = twoSumProblem0.HashMap(intArray68, (-1));
        java.lang.Class<?> wildcardClass71 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[10, -1, 0, -1, 32]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        java.lang.Class<?> wildcardClass55 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem36.BruteForce(intArray54, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem36.HashMap(intArray65, (int) (short) 10);
        int[] intArray73 = twoSumProblem0.HashMap(intArray65, (-1));
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem29.BruteForce(intArray41, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem55.BruteForce(intArray73, (int) (short) 0);
        int[] intArray81 = twoSumProblem46.HashMap(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem29.HashMap(intArray81, (int) (short) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, (int) (short) 100);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.BruteForce(intArray86, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem47.HashMap(intArray85, 0);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) -1);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray91, (int) '4');
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem0.HashMap(intArray41, (int) (short) 10);
        java.lang.Class<?> wildcardClass44 = intArray43.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem27.TwoPointer(intArray63, (int) (short) -1);
        int[] intArray71 = twoSumProblem18.HashMap(intArray69, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem18.HashMap(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) ' ');
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.BruteForce(intArray85, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        java.lang.Class<?> wildcardClass55 = intArray48.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem25.HashMap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem25.BruteForce(intArray55, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem25.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.BruteForce(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem25.HashMap(intArray92, (int) (short) 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) 'a');
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem38.BruteForce(intArray50, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem55.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem38.BruteForce(intArray85, (int) (short) 0);
        int[] intArray93 = twoSumProblem37.BruteForce(intArray91, (int) (short) 1);
        int[] intArray95 = twoSumProblem0.HashMap(intArray91, (int) (short) 1);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem29.BruteForce(intArray41, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem55.BruteForce(intArray73, (int) (short) 0);
        int[] intArray81 = twoSumProblem46.HashMap(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem29.HashMap(intArray81, (int) (short) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, (int) (short) 100);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.BruteForce(intArray86, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.HashMap(intArray92, (int) (byte) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) (short) -1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.HashMap(intArray97, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        java.lang.Class<?> wildcardClass47 = intArray42.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem25.TwoPointer(intArray61, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem25.BruteForce(intArray80, (int) '4');
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray80, 1);
        java.lang.Class<?> wildcardClass89 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem41.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem35.BruteForce(intArray53, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        int[] intArray81 = twoSumProblem35.BruteForce(intArray73, (int) '4');
        int[] intArray83 = twoSumProblem0.HashMap(intArray81, (int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem41.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem35.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem26.HashMap(intArray59, (int) (short) 1);
        int[] intArray63 = twoSumProblem17.HashMap(intArray59, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem17.HashMap(intArray69, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem17.TwoPointer(intArray76, (int) 'a');
        int[] intArray84 = twoSumProblem0.BruteForce(intArray82, 0);
        java.lang.Class<?> wildcardClass85 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, (int) '#');
        java.lang.Class<?> wildcardClass73 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem34.HashMap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem34.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem19.TwoPointer(intArray64, (int) '#');
        int[] intArray72 = twoSumProblem18.TwoPointer(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem73.HashMap(intArray88, (int) (byte) 100);
        int[] intArray92 = twoSumProblem18.TwoPointer(intArray88, (int) (byte) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray88, (int) (short) 10);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.HashMap(intArray95, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray77, (int) 'a');
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.BruteForce(intArray82, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem34.HashMap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem34.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem19.TwoPointer(intArray64, (int) '#');
        int[] intArray72 = twoSumProblem18.TwoPointer(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem73.HashMap(intArray88, (int) (byte) 100);
        int[] intArray92 = twoSumProblem18.TwoPointer(intArray88, (int) (byte) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray88, (int) (short) 10);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.HashMap(intArray95, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        java.lang.Class<?> wildcardClass36 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray91, (int) '4');
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.TwoPointer(intArray74, (int) '#');
        int[] intArray80 = twoSumProblem0.TwoPointer(intArray74, (int) (short) 0);
        java.lang.Class<?> wildcardClass81 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem6.TwoPointer(intArray44, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem49.TwoPointer(intArray71, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem49.HashMap(intArray77, (int) (short) 10);
        int[] intArray83 = twoSumProblem6.TwoPointer(intArray77, (int) (short) 100);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, 1);
        java.lang.Class<?> wildcardClass86 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.TwoPointer(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem30.BruteForce(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem15.TwoPointer(intArray77, 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (short) 1);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        java.lang.Class<?> wildcardClass37 = intArray34.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (-1), (short) 10, (byte) 0 };
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (byte) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, -1, 10, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem0.HashMap(intArray41, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.TwoPointer(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray89 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray91 = twoSumProblem77.TwoPointer(intArray89, 100);
        int[] intArray93 = twoSumProblem76.HashMap(intArray91, (int) (byte) 100);
        int[] intArray95 = twoSumProblem61.HashMap(intArray91, (int) (byte) -1);
        int[] intArray97 = twoSumProblem44.HashMap(intArray95, (int) '4');
        int[] intArray99 = twoSumProblem0.HashMap(intArray95, 100);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (byte) 10);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.TwoPointer(intArray39, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem17.HashMap(intArray45, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem17.TwoPointer(intArray84, 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 10);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.HashMap(intArray89, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        int[] intArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray39 = twoSumProblem0.TwoPointer(intArray37, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        int[] intArray66 = twoSumProblem12.HashMap(intArray64, (int) (short) 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray64, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem75.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem69.BruteForce(intArray87, (int) (short) 0);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) '4');
        java.lang.Class<?> wildcardClass96 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem6.TwoPointer(intArray44, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem49.TwoPointer(intArray71, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem49.HashMap(intArray77, (int) (short) 10);
        int[] intArray83 = twoSumProblem6.TwoPointer(intArray77, (int) (short) 100);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, 1);
        java.lang.Class<?> wildcardClass86 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        java.lang.Class<?> wildcardClass78 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        int[] intArray69 = twoSumProblem35.HashMap(intArray65, (int) (byte) -1);
        int[] intArray71 = twoSumProblem0.HashMap(intArray65, (int) (short) 10);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray74 = twoSumProblem0.TwoPointer(intArray72, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray80, (int) 'a');
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.HashMap(intArray85, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        int[] intArray64 = twoSumProblem18.BruteForce(intArray62, (int) (byte) 0);
        int[] intArray66 = twoSumProblem0.BruteForce(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, 0);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem60.HashMap(intArray90, (int) (byte) -1);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray90, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem35.HashMap(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem35.TwoPointer(intArray59, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem64.HashMap(intArray87, 0);
        int[] intArray93 = twoSumProblem35.BruteForce(intArray87, 100);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray87, 0);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        java.lang.Class<?> wildcardClass37 = intArray36.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        int[] intArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem70.HashMap(intArray85, (int) (byte) 100);
        int[] intArray89 = twoSumProblem55.HashMap(intArray85, (int) (byte) -1);
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) (short) 1);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        int[] intArray64 = twoSumProblem18.BruteForce(intArray62, (int) (byte) 0);
        int[] intArray66 = twoSumProblem0.BruteForce(intArray64, (int) (byte) -1);
        java.lang.Class<?> wildcardClass67 = intArray64.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        java.lang.Class<?> wildcardClass76 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem28.HashMap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem28.BruteForce(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem28.HashMap(intArray66, 0);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, 100);
        int[] intArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem60.HashMap(intArray90, (int) (byte) -1);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray90, 0);
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        java.lang.Class<?> wildcardClass78 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray83, (int) '#');
        java.lang.Class<?> wildcardClass90 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem55.TwoPointer(intArray89, 10);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) (short) 100);
        java.lang.Class<?> wildcardClass94 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.TwoPointer(intArray89, (int) '#');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray89, (int) (byte) -1);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem9.BruteForce(intArray21, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem44.HashMap(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem44.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem26.BruteForce(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem9.HashMap(intArray80, 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) ' ');
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.HashMap(intArray85, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.TwoPointer(intArray49, (int) (short) 0);
        int[] intArray53 = twoSumProblem15.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem0.HashMap(intArray53, 0);
        java.lang.Class<?> wildcardClass56 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        int[] intArray60 = twoSumProblem0.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem61.HashMap(intArray76, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem61.BruteForce(intArray91, 0);
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray91, (int) (short) 1);
        java.lang.Class<?> wildcardClass98 = intArray97.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        int[] intArray69 = twoSumProblem35.HashMap(intArray65, (int) (byte) -1);
        int[] intArray71 = twoSumProblem0.HashMap(intArray65, (int) (short) 10);
        java.lang.Class<?> wildcardClass72 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem0.TwoPointer(intArray63, (int) '4');
        java.lang.Class<?> wildcardClass72 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem36.HashMap(intArray69, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem36.BruteForce(intArray88, (int) (short) 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 100);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        java.lang.Class<?> wildcardClass71 = intArray64.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem49.HashMap(intArray72, 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, (int) ' ');
        java.lang.Class<?> wildcardClass79 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.BruteForce(intArray35, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem17.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem64.HashMap(intArray73, 100);
        int[] intArray77 = twoSumProblem17.BruteForce(intArray75, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 100);
        java.lang.Class<?> wildcardClass80 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray62 = twoSumProblem0.HashMap(intArray60, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem15.HashMap(intArray53, 0);
        int[] intArray59 = twoSumProblem0.TwoPointer(intArray57, 1);
        java.lang.Class<?> wildcardClass60 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem32.BruteForce(intArray80, (int) (short) 100);
        int[] intArray88 = twoSumProblem15.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem6.TwoPointer(intArray86, (int) ' ');
        int[] intArray92 = twoSumProblem0.HashMap(intArray86, (-1));
        java.lang.Class<?> wildcardClass93 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.BruteForce(intArray72, (int) (short) 1);
        int[] intArray76 = twoSumProblem0.BruteForce(intArray72, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.TwoPointer(intArray89, (int) '#');
        int[] intArray95 = twoSumProblem0.HashMap(intArray93, (-1));
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray70, (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        java.lang.Class<?> wildcardClass60 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.TwoPointer(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem30.BruteForce(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem15.TwoPointer(intArray77, 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (short) 1);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray80, (int) 'a');
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem25.HashMap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem25.BruteForce(intArray55, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem25.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.BruteForce(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem25.HashMap(intArray92, (int) (short) 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) 'a');
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem28.HashMap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem28.BruteForce(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem28.HashMap(intArray66, 0);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, 100);
        java.lang.Class<?> wildcardClass73 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem1.BruteForce(intArray48, (int) (short) 0);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray54, (int) (short) 1);
        java.lang.Class<?> wildcardClass57 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem42.HashMap(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem42.BruteForce(intArray73, (int) '#');
        int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) (short) 0);
        java.lang.Class<?> wildcardClass80 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.HashMap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem43.BruteForce(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem43.HashMap(intArray92, (int) (short) 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray92, (int) (short) 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem61.HashMap(intArray76, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem61.BruteForce(intArray91, 0);
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, 100);
        java.lang.Class<?> wildcardClass98 = intArray97.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem35.HashMap(intArray44, 100);
        int[] intArray48 = twoSumProblem20.TwoPointer(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem20.BruteForce(intArray52, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem63.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem57.BruteForce(intArray75, (int) (short) 0);
        int[] intArray83 = twoSumProblem20.TwoPointer(intArray81, 0);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray81, 100);
        java.lang.Class<?> wildcardClass86 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.HashMap(intArray80, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.HashMap(intArray61, (int) (short) -1);
        java.lang.Class<?> wildcardClass68 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        java.lang.Class<?> wildcardClass37 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem35.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray82, (int) '#');
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.BruteForce(intArray91, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem0.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray87, (int) 'a');
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray80 = twoSumProblem0.HashMap(intArray78, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem7.HashMap(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem7.HashMap(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.BruteForce(intArray62, (int) (short) 0);
        int[] intArray70 = twoSumProblem35.HashMap(intArray68, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem71.HashMap(intArray84, (int) '#');
        int[] intArray92 = twoSumProblem35.HashMap(intArray90, (-1));
        int[] intArray94 = twoSumProblem7.HashMap(intArray92, 10);
        int[] intArray96 = twoSumProblem6.BruteForce(intArray94, (int) (short) 100);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, 10);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem25.BruteForce(intArray40, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.HashMap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem43.BruteForce(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem43.TwoPointer(intArray81, (int) (short) -1);
        int[] intArray87 = twoSumProblem25.BruteForce(intArray85, 0);
        int[] intArray93 = new int[] { 10, (short) -1, (byte) 0, (short) -1, ' ' };
        int[] intArray95 = twoSumProblem25.HashMap(intArray93, (-1));
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray93, (int) '4');
        java.lang.Class<?> wildcardClass98 = intArray97.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[10, -1, 0, -1, 32]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[1, 2]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        int[] intArray46 = new int[] { (short) 1, (byte) 1, (byte) 0 };
        int[] intArray48 = twoSumProblem0.TwoPointer(intArray46, (int) (short) -1);
        java.lang.Class<?> wildcardClass49 = intArray48.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem42.HashMap(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem42.BruteForce(intArray73, (int) '#');
        int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) (short) 0);
        java.lang.Class<?> wildcardClass80 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem36.HashMap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem36.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray66, (int) (short) 100);
        int[] intArray74 = twoSumProblem1.HashMap(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem1.BruteForce(intArray79, 100);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (byte) 0);
        java.lang.Class<?> wildcardClass88 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        int[] intArray76 = twoSumProblem32.TwoPointer(intArray74, (int) (short) 1);
        int[] intArray78 = twoSumProblem15.BruteForce(intArray76, (int) '4');
        int[] intArray80 = twoSumProblem0.TwoPointer(intArray76, (int) ' ');
        java.lang.Class<?> wildcardClass81 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        int[] intArray58 = new int[] { 'a', (short) 10, (byte) 0, (byte) -1, (byte) 1, (byte) 0 };
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (byte) 10);
        java.lang.Class<?> wildcardClass61 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 10, 0, -1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        int[] intArray64 = twoSumProblem18.BruteForce(intArray56, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem65.HashMap(intArray74, 100);
        int[] intArray78 = twoSumProblem18.BruteForce(intArray76, (int) (short) -1);
        int[] intArray80 = twoSumProblem1.TwoPointer(intArray78, (int) (short) 100);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 10);
        java.lang.Class<?> wildcardClass83 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray80, (int) (byte) 1);
        java.lang.Class<?> wildcardClass87 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray29 = twoSumProblem18.HashMap(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem30.HashMap(intArray45, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem30.BruteForce(intArray60, 0);
        int[] intArray66 = twoSumProblem18.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem67.HashMap(intArray82, (int) (byte) 100);
        int[] intArray86 = twoSumProblem18.BruteForce(intArray82, (int) (short) -1);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray82, (-1));
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.HashMap(intArray89, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem27.TwoPointer(intArray63, (int) (short) -1);
        int[] intArray71 = twoSumProblem18.HashMap(intArray69, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem18.HashMap(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray80, (int) (byte) 0);
        java.lang.Class<?> wildcardClass85 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        int[] intArray44 = twoSumProblem20.BruteForce(intArray38, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem20.HashMap(intArray49, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem20.HashMap(intArray60, (int) '4');
        int[] intArray68 = twoSumProblem0.BruteForce(intArray66, (int) (short) 100);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray71 = twoSumProblem0.TwoPointer(intArray69, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem65.BruteForce(intArray83, (int) (short) 0);
        int[] intArray91 = twoSumProblem56.HashMap(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem47.HashMap(intArray89, 100);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) 100);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        int[] intArray64 = twoSumProblem18.BruteForce(intArray62, (int) (byte) 0);
        int[] intArray66 = twoSumProblem0.BruteForce(intArray64, (int) (byte) -1);
        java.lang.Class<?> wildcardClass67 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem35.HashMap(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem35.TwoPointer(intArray59, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem64.HashMap(intArray87, 0);
        int[] intArray93 = twoSumProblem35.BruteForce(intArray87, 100);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray87, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem17.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem69.BruteForce(intArray84, (int) (short) 1);
        int[] intArray88 = twoSumProblem17.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray84, (int) (byte) -1);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        int[] intArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray49 = twoSumProblem0.TwoPointer(intArray47, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray45, (int) '#');
        int[] intArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray54 = twoSumProblem0.TwoPointer(intArray52, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem0.HashMap(intArray77, (int) (short) 10);
        java.lang.Class<?> wildcardClass84 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray60 = twoSumProblem49.HashMap(intArray58, 100);
        int[] intArray62 = twoSumProblem34.TwoPointer(intArray60, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray75 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray77 = twoSumProblem63.TwoPointer(intArray75, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem78.HashMap(intArray87, 100);
        int[] intArray91 = twoSumProblem63.TwoPointer(intArray89, (int) (byte) 0);
        int[] intArray93 = twoSumProblem34.HashMap(intArray89, 100);
        int[] intArray95 = twoSumProblem9.HashMap(intArray93, (int) (byte) 10);
        int[] intArray97 = twoSumProblem0.HashMap(intArray93, (int) (byte) 1);
        java.lang.Class<?> wildcardClass98 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        java.lang.Class<?> wildcardClass25 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem9.HashMap(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem9.HashMap(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray49 = twoSumProblem38.HashMap(intArray47, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem38.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = twoSumProblem37.BruteForce(intArray86, 1);
        int[] intArray90 = twoSumProblem9.HashMap(intArray86, 1);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, (int) (byte) 10);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem37.TwoPointer(intArray82, (int) '#');
        int[] intArray90 = twoSumProblem36.TwoPointer(intArray82, (int) (byte) -1);
        int[] intArray92 = twoSumProblem0.HashMap(intArray82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem0.HashMap(intArray49, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem0.BruteForce(intArray72, 1);
        java.lang.Class<?> wildcardClass75 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        java.lang.Class<?> wildcardClass47 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray86, 10);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray70, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem1.TwoPointer(intArray92, 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (short) -1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.TwoPointer(intArray97, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray22 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray24 = twoSumProblem10.TwoPointer(intArray22, 100);
        int[] intArray26 = twoSumProblem9.HashMap(intArray24, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem9.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem9.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem9.TwoPointer(intArray85, 0);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray87, (int) (short) 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.HashMap(intArray90, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem25.HashMap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem25.BruteForce(intArray55, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem25.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.BruteForce(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem25.HashMap(intArray92, (int) (short) 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) 'a');
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        int[] intArray60 = twoSumProblem0.TwoPointer(intArray58, 0);
        java.lang.Class<?> wildcardClass61 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        java.lang.Class<?> wildcardClass35 = intArray30.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (byte) 10);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        int[] intArray51 = twoSumProblem17.HashMap(intArray47, (int) (byte) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem54.BruteForce(intArray72, (int) (short) 0);
        int[] intArray80 = twoSumProblem0.HashMap(intArray78, 1);
        java.lang.Class<?> wildcardClass81 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem49.BruteForce(intArray77, (int) (byte) 10);
        int[] intArray81 = twoSumProblem0.BruteForce(intArray77, 0);
        java.lang.Class<?> wildcardClass82 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem6.HashMap(intArray86, (int) 'a');
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray86, (int) (short) -1);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem1.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.TwoPointer(intArray49, (int) '#');
        int[] intArray55 = twoSumProblem1.HashMap(intArray49, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem1.BruteForce(intArray64, 10);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray66, (int) (byte) 0);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray71 = twoSumProblem0.HashMap(intArray69, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 1]");
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, 100);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.BruteForce(intArray62, (int) (short) 0);
        int[] intArray70 = twoSumProblem35.HashMap(intArray68, (int) (short) 1);
        int[] intArray72 = twoSumProblem18.HashMap(intArray70, (int) (short) 100);
        int[] intArray74 = twoSumProblem17.TwoPointer(intArray72, (int) (byte) 10);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (short) 0);
        java.lang.Class<?> wildcardClass77 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray38 = twoSumProblem0.TwoPointer(intArray36, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem47.HashMap(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem30.HashMap(intArray82, (int) (short) 100);
        int[] intArray86 = twoSumProblem29.TwoPointer(intArray84, (int) (byte) 10);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) '#');
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray53, (int) (short) 10);
        java.lang.Class<?> wildcardClass58 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem51.TwoPointer(intArray87, (int) (short) -1);
        int[] intArray95 = twoSumProblem42.HashMap(intArray93, (int) (short) -1);
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray93, 0);
        java.lang.Class<?> wildcardClass98 = intArray97.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        java.lang.Class<?> wildcardClass50 = intArray43.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem38.HashMap(intArray71, (int) (short) 1);
        int[] intArray75 = twoSumProblem21.HashMap(intArray73, (int) (short) 100);
        int[] intArray77 = twoSumProblem1.TwoPointer(intArray73, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.TwoPointer(intArray90, (int) '#');
        int[] intArray96 = twoSumProblem1.BruteForce(intArray94, 0);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (byte) 10);
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem38.HashMap(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem38.HashMap(intArray61, 0);
        int[] intArray67 = twoSumProblem23.TwoPointer(intArray65, (int) (short) 1);
        int[] intArray69 = twoSumProblem6.BruteForce(intArray67, (int) '4');
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, (int) '4');
        java.lang.Class<?> wildcardClass72 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        int[] intArray51 = twoSumProblem17.HashMap(intArray47, (int) (byte) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem54.BruteForce(intArray72, (int) (short) 0);
        int[] intArray80 = twoSumProblem0.HashMap(intArray78, 1);
        java.lang.Class<?> wildcardClass81 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        java.lang.Class<?> wildcardClass42 = intArray33.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem54.HashMap(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem54.HashMap(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem82.HashMap(intArray91, 100);
        int[] intArray95 = twoSumProblem54.BruteForce(intArray91, (-1));
        int[] intArray97 = twoSumProblem0.BruteForce(intArray95, (int) (byte) 10);
        java.lang.Class<?> wildcardClass98 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray76, 0);
        int[] intArray82 = twoSumProblem0.BruteForce(intArray80, 0);
        java.lang.Class<?> wildcardClass83 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem17.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem69.BruteForce(intArray84, (int) (short) 1);
        int[] intArray88 = twoSumProblem17.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray84, (int) (byte) -1);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem0.HashMap(intArray41, (int) (short) 10);
        java.lang.Class<?> wildcardClass44 = intArray41.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.BruteForce(intArray44, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem48.HashMap(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem66.BruteForce(intArray78, 0);
        int[] intArray84 = twoSumProblem60.TwoPointer(intArray82, (int) (short) 0);
        int[] intArray86 = twoSumProblem48.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem47.HashMap(intArray84, (int) (byte) 1);
        int[] intArray90 = twoSumProblem29.BruteForce(intArray88, (-1));
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, 0);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 0);
        java.lang.Class<?> wildcardClass55 = intArray52.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem8.HashMap(intArray12, (int) (short) 100);
        int[] intArray20 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray22 = twoSumProblem8.TwoPointer(intArray20, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem8.TwoPointer(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem7.TwoPointer(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem62.HashMap(intArray75, (int) '#');
        int[] intArray83 = twoSumProblem7.BruteForce(intArray81, (int) '4');
        int[] intArray85 = twoSumProblem1.TwoPointer(intArray81, (int) (byte) 100);
        int[] intArray87 = twoSumProblem0.HashMap(intArray81, 100);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem9.BruteForce(intArray21, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem44.HashMap(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem44.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem26.BruteForce(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem9.HashMap(intArray80, 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) ' ');
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        java.lang.Class<?> wildcardClass77 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem43.BruteForce(intArray76, (int) (short) -1);
        int[] intArray86 = twoSumProblem0.BruteForce(intArray84, (int) (byte) 10);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray89 = twoSumProblem0.HashMap(intArray87, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem1.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.TwoPointer(intArray49, (int) '#');
        int[] intArray55 = twoSumProblem1.HashMap(intArray49, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem1.BruteForce(intArray64, 10);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray66, (int) (byte) 0);
        java.lang.Class<?> wildcardClass69 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray89, (-1));
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        int[] intArray80 = new int[] { 'a', (short) 0, 10 };
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 100);
        java.lang.Class<?> wildcardClass83 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 0, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem55.TwoPointer(intArray89, 10);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray89, (int) (short) 10);
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem32.HashMap(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem32.HashMap(intArray55, 0);
        int[] intArray61 = twoSumProblem17.TwoPointer(intArray59, (int) (short) 1);
        int[] intArray63 = twoSumProblem0.BruteForce(intArray61, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem0.HashMap(intArray77, (int) (byte) -1);
        java.lang.Class<?> wildcardClass86 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        java.lang.Class<?> wildcardClass17 = intArray16.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem0.HashMap(intArray72, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, 0);
        java.lang.Class<?> wildcardClass92 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem18.BruteForce(intArray50, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem70.HashMap(intArray79, 100);
        int[] intArray83 = twoSumProblem55.TwoPointer(intArray81, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem55.BruteForce(intArray87, 1);
        int[] intArray93 = twoSumProblem18.HashMap(intArray87, (int) 'a');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray87, (-1));
        java.lang.Class<?> wildcardClass96 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem47.HashMap(intArray76, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem47.HashMap(intArray87, (int) '4');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray87, (int) '4');
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        int[] intArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray39 = twoSumProblem0.BruteForce(intArray37, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem36.HashMap(intArray59, 0);
        int[] intArray65 = twoSumProblem19.BruteForce(intArray63, (int) (byte) 0);
        int[] intArray67 = twoSumProblem1.BruteForce(intArray65, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem1.TwoPointer(intArray84, 0);
        int[] intArray88 = twoSumProblem0.HashMap(intArray86, (int) '4');
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray55, (int) '4');
        java.lang.Class<?> wildcardClass62 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem52.HashMap(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem52.HashMap(intArray75, 0);
        int[] intArray81 = twoSumProblem37.TwoPointer(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem0.HashMap(intArray79, 10);
        java.lang.Class<?> wildcardClass84 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray90, (int) (byte) 10);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem55.BruteForce(intArray73, (int) (short) 0);
        int[] intArray81 = twoSumProblem46.HashMap(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem37.HashMap(intArray79, 100);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) ' ');
        java.lang.Class<?> wildcardClass86 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray27 = twoSumProblem0.TwoPointer(intArray25, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray31 = twoSumProblem20.HashMap(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem20.TwoPointer(intArray44, (int) (short) 0);
        int[] intArray50 = twoSumProblem0.BruteForce(intArray44, 100);
        java.lang.Class<?> wildcardClass51 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.BruteForce(intArray61, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray87 = twoSumProblem68.HashMap(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem43.BruteForce(intArray81, (int) '4');
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) 'a');
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem0.TwoPointer(intArray65, (int) (byte) 0);
        java.lang.Class<?> wildcardClass72 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.BruteForce(intArray62, (int) (short) 0);
        int[] intArray70 = twoSumProblem35.HashMap(intArray68, (int) (short) 1);
        int[] intArray72 = twoSumProblem18.HashMap(intArray70, (int) (short) 100);
        int[] intArray74 = twoSumProblem17.TwoPointer(intArray72, (int) (byte) 10);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (short) 0);
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        int[] intArray81 = new int[] { (byte) 100, (byte) 1, '4', (byte) 100 };
        int[] intArray83 = twoSumProblem0.BruteForce(intArray81, (int) (short) -1);
        java.lang.Class<?> wildcardClass84 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 1, 52, 100]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem60.HashMap(intArray75, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem60.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, 0);
        java.lang.Class<?> wildcardClass97 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray73 = twoSumProblem0.HashMap(intArray71, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray70, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem1.TwoPointer(intArray92, 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (short) -1);
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem10.TwoPointer(intArray46, (int) (short) -1);
        int[] intArray54 = twoSumProblem1.HashMap(intArray52, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem1.HashMap(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem1.TwoPointer(intArray84, (int) (byte) 1);
        int[] intArray94 = twoSumProblem0.HashMap(intArray92, (int) (byte) 100);
        java.lang.Class<?> wildcardClass95 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        java.lang.Class<?> wildcardClass78 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        int[] intArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray39 = twoSumProblem0.HashMap(intArray37, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem15.BruteForce(intArray62, (int) '#');
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray62, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem71.BruteForce(intArray89, (int) (short) 0);
        int[] intArray97 = twoSumProblem0.BruteForce(intArray95, (int) (short) 1);
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        int[] intArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray49 = twoSumProblem0.HashMap(intArray47, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem19.HashMap(intArray34, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem19.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem1.BruteForce(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem56.HashMap(intArray69, (int) '#');
        int[] intArray77 = twoSumProblem1.TwoPointer(intArray69, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem1.BruteForce(intArray94, (-1));
        int[] intArray98 = twoSumProblem0.HashMap(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray80 = twoSumProblem0.BruteForce(intArray78, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        java.lang.Class<?> wildcardClass62 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem1.TwoPointer(intArray83, (int) (byte) 0);
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, (int) (byte) 100);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.HashMap(intArray88, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem46.HashMap(intArray55, 100);
        int[] intArray59 = twoSumProblem31.TwoPointer(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem75.HashMap(intArray84, 100);
        int[] intArray88 = twoSumProblem60.TwoPointer(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem31.HashMap(intArray86, 100);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray86, (int) '4');
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem0.HashMap(intArray72, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, 0);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem28.HashMap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem28.BruteForce(intArray58, 0);
        int[] intArray64 = twoSumProblem16.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = twoSumProblem15.BruteForce(intArray64, 1);
        int[] intArray73 = new int[] { 'a', (short) 10, (byte) 0, (byte) -1, (byte) 1, (byte) 0 };
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (byte) 10);
        int[] intArray77 = twoSumProblem0.HashMap(intArray73, (int) (short) 1);
        java.lang.Class<?> wildcardClass78 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 10, 0, -1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 2]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[2, 4]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        java.lang.Class<?> wildcardClass50 = intArray49.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem10.TwoPointer(intArray46, (int) (short) -1);
        int[] intArray54 = twoSumProblem1.HashMap(intArray52, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem1.HashMap(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem1.TwoPointer(intArray84, (int) (byte) 1);
        int[] intArray94 = twoSumProblem0.HashMap(intArray92, (int) (byte) 100);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        int[] intArray51 = twoSumProblem17.HashMap(intArray47, (int) (byte) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem54.BruteForce(intArray72, (int) (short) 0);
        int[] intArray80 = twoSumProblem0.HashMap(intArray78, 1);
        java.lang.Class<?> wildcardClass81 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem0.HashMap(intArray49, (int) (byte) -1);
        java.lang.Class<?> wildcardClass56 = intArray55.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray80, (int) (byte) 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray89 = twoSumProblem0.BruteForce(intArray87, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem1.TwoPointer(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.HashMap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem58.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem1.TwoPointer(intArray88, (int) '#');
        int[] intArray96 = twoSumProblem0.BruteForce(intArray94, (int) (byte) 100);
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem36.HashMap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem36.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem73.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem18.HashMap(intArray85, (int) (short) -1);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (int) (byte) 100);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem60.HashMap(intArray75, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem60.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray76, 0);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) '#');
        java.lang.Class<?> wildcardClass94 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray83, (int) '#');
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray63 = twoSumProblem52.HashMap(intArray61, 100);
        int[] intArray65 = twoSumProblem37.TwoPointer(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem37.BruteForce(intArray69, 1);
        int[] intArray75 = twoSumProblem0.HashMap(intArray69, (int) 'a');
        java.lang.Class<?> wildcardClass76 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem37.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem31.TwoPointer(intArray67, (int) (short) -1);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, 0);
        java.lang.Class<?> wildcardClass76 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem29.BruteForce(intArray47, (int) (short) 0);
        int[] intArray55 = twoSumProblem20.HashMap(intArray53, (int) (short) 1);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (short) -1);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        int[] intArray64 = twoSumProblem18.BruteForce(intArray62, (int) (byte) 0);
        int[] intArray66 = twoSumProblem0.BruteForce(intArray64, (int) (byte) -1);
        int[] intArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray18 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray20 = twoSumProblem6.TwoPointer(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray32 = twoSumProblem21.HashMap(intArray30, 100);
        int[] intArray34 = twoSumProblem6.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem52.HashMap(intArray85, (int) (short) 1);
        int[] intArray89 = twoSumProblem35.HashMap(intArray87, (int) (short) 100);
        int[] intArray91 = twoSumProblem6.TwoPointer(intArray89, (int) (short) 100);
        int[] intArray93 = twoSumProblem0.HashMap(intArray89, 100);
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.TwoPointer(intArray59, 0);
        java.lang.Class<?> wildcardClass66 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem1.BruteForce(intArray48, (int) (short) 0);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray54, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray87, 100);
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.TwoPointer(intArray59, (int) 'a');
        java.lang.Class<?> wildcardClass66 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        int[] intArray29 = twoSumProblem1.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem1.TwoPointer(intArray33, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem38.TwoPointer(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem1.HashMap(intArray80, 10);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 0);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray89 = twoSumProblem0.TwoPointer(intArray87, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem37.HashMap(intArray60, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem37.BruteForce(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem17.TwoPointer(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray72, (int) (short) 10);
        java.lang.Class<?> wildcardClass77 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem38.HashMap(intArray71, (int) (short) 1);
        int[] intArray75 = twoSumProblem21.HashMap(intArray73, (int) (short) 100);
        int[] intArray77 = twoSumProblem1.TwoPointer(intArray73, 1);
        int[] intArray79 = twoSumProblem0.HashMap(intArray77, (int) (short) 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem37.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem31.TwoPointer(intArray67, (int) (short) -1);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, 0);
        java.lang.Class<?> wildcardClass76 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        int[] intArray11 = twoSumProblem6.BruteForce(intArray9, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        int[] intArray30 = twoSumProblem6.TwoPointer(intArray28, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem48.HashMap(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem48.HashMap(intArray71, 0);
        int[] intArray77 = twoSumProblem31.BruteForce(intArray75, (int) (byte) 0);
        int[] intArray79 = twoSumProblem6.TwoPointer(intArray75, (int) ' ');
        int[] intArray81 = twoSumProblem0.HashMap(intArray75, 10);
        java.lang.Class<?> wildcardClass82 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem34.HashMap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem34.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem19.TwoPointer(intArray64, (int) '#');
        int[] intArray72 = twoSumProblem18.TwoPointer(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem73.HashMap(intArray88, (int) (byte) 100);
        int[] intArray92 = twoSumProblem18.TwoPointer(intArray88, (int) (byte) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray88, (int) (short) 10);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray49, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray87 = twoSumProblem52.HashMap(intArray81, (int) (short) 10);
        int[] intArray89 = twoSumProblem0.HashMap(intArray81, (int) (byte) 100);
        java.lang.Class<?> wildcardClass90 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) (short) -1);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem67.HashMap(intArray80, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem67.HashMap(intArray90, 0);
        int[] intArray96 = twoSumProblem52.TwoPointer(intArray94, (int) (short) 1);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray94, (int) ' ');
        java.lang.Class<?> wildcardClass99 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        int[] intArray29 = twoSumProblem1.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem1.TwoPointer(intArray33, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem38.TwoPointer(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem1.HashMap(intArray80, 10);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 0);
        java.lang.Class<?> wildcardClass87 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        java.lang.Class<?> wildcardClass25 = intArray18.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray63, 10);
        java.lang.Class<?> wildcardClass66 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem36.BruteForce(intArray54, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem36.HashMap(intArray65, (int) (short) 10);
        int[] intArray73 = twoSumProblem0.HashMap(intArray65, (-1));
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem65.HashMap(intArray78, (int) '#');
        int[] intArray86 = twoSumProblem29.HashMap(intArray84, (-1));
        int[] intArray88 = twoSumProblem1.HashMap(intArray86, 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, 0);
        java.lang.Class<?> wildcardClass91 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem49.TwoPointer(intArray83, 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray83, 1);
        java.lang.Class<?> wildcardClass88 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray80, (int) '#');
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        java.lang.Class<?> wildcardClass47 = intArray44.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem49.HashMap(intArray82, (int) (short) 1);
        int[] intArray86 = twoSumProblem32.HashMap(intArray84, (int) (short) 100);
        int[] intArray88 = twoSumProblem31.TwoPointer(intArray86, (int) (byte) 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, (int) (short) 1);
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.HashMap(intArray89, (int) ' ');
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) (byte) 10);
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        int[] intArray44 = twoSumProblem20.BruteForce(intArray38, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem20.HashMap(intArray49, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem20.HashMap(intArray60, (int) '4');
        int[] intArray68 = twoSumProblem0.BruteForce(intArray66, (int) (short) 100);
        java.lang.Class<?> wildcardClass69 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem1.BruteForce(intArray48, (int) (short) 0);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray54, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray87, 100);
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.TwoPointer(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem60.HashMap(intArray90, (int) (byte) -1);
        int[] intArray96 = twoSumProblem43.HashMap(intArray94, (int) '4');
        int[] intArray98 = twoSumProblem0.BruteForce(intArray94, (int) (short) 100);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem38.BruteForce(intArray50, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem55.HashMap(intArray78, 0);
        int[] intArray84 = twoSumProblem38.BruteForce(intArray82, (int) (byte) 0);
        int[] intArray86 = twoSumProblem20.BruteForce(intArray84, (int) (byte) -1);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray86, (int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        int[] intArray64 = twoSumProblem18.BruteForce(intArray62, (int) (byte) 0);
        int[] intArray66 = twoSumProblem0.BruteForce(intArray64, (int) (byte) -1);
        int[] intArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray69 = twoSumProblem0.BruteForce(intArray67, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
    }
}

